$ "/c/Users/anmoo/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0/LocalCache/local-packages/Python311/Scripts/slither" .
'forge clean' running (wd: C:\Users\anmoo\Homework5)
'forge config --json' running
'forge build --build-info --skip */test/** */script/** --force' running (wd: C:\Users\anmoo\Homework5)
INFO:Detectors:
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) has bitwise-xor operator ^ instead of the exponentiation operator **:
         - inverse = (3 * denominator) ^ 2 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#254)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-exponentiation
INFO:Detectors:
stdStorageSafe.getMaskByOffsets(uint256,uint256) (lib/forge-std/src/StdStorage.sol#308-316) contains an incorrect shift operation: mask = 1 << 256 - offsetRight + offsetLeft - 1 << offsetRight (lib/forge-std/src/StdStorage.sol#315-316)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-shift-in-assembly
INFO:Detectors:
StdCheats.vm (lib/forge-std/src/StdCheats.sol#632-637) shadows:
        - StdCheatsSafe.vm (lib/forge-std/src/StdCheats.sol#10-11)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing
INFO:Detectors:
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) performs a multiplication on the result of a division:
        - denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#237)
        - inverse = (3 * denominator) ^ 2 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#254)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) performs a multiplication on the result of a division:
        - denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#237)
        - inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#257)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) performs a multiplication on the result of a division:
        - denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#237)
        - inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#259)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) performs a multiplication on the result of a division:
        - denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#237)
        - inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#259-260)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) performs a multiplication on the result of a division:
        - denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#237)
        - inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#260-261)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) performs a multiplication on the result of a division:
        - denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#237)
        - inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#261-262)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) performs a multiplication on the result of a division:
        - denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#237)
        - inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#262-263)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) performs a multiplication on the result of a division:
        - low = low / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#239)
        - result = low * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#269)
Math.invMod(uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#308-352) performs a multiplication on the result of a division:
        - quotient = gcd / remainder (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#326-327)
        - (gcd,remainder) = (remainder,gcd - remainder * quotient) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#327-340)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in Governance.executeProposal(uint256) (src/Governance.sol#93-103):
        External calls:
        - (success,None) = address(this).call(p.callData) (src/Governance.sol#100-101)
        State variables written after the call(s):
        - p.state = ProposalState.Executed (src/Governance.sol#103)
        Governance.proposals (src/Governance.sol#30-33) can be used in cross function reentrancies:
        - Governance.approveExecution(uint256) (src/Governance.sol#79-93)
        - Governance.executeProposal(uint256) (src/Governance.sol#93-103)
        - Governance.finalizeProposal(uint256) (src/Governance.sol#66-78)
        - Governance.proposals (src/Governance.sol#30-33)
        - Governance.propose(string,bytes) (src/Governance.sol#36-50)
        - Governance.vote(uint256) (src/Governance.sol#50-65)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
stdStorageSafe.find(StdStorage,bool) (lib/forge-std/src/StdStorage.sol#105-163) contains a tautology or contradiction:
        - -- i >= 0 (lib/forge-std/src/StdStorage.sol#124)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction
INFO:Detectors:
stdStorageSafe.root(StdStorage).root_slot (lib/forge-std/src/StdStorage.sol#261) is a local variable never initialized
StdCheatsSafe.rawToConvertedEIPTx1559(StdCheatsSafe.RawTx1559).transaction (lib/forge-std/src/StdCheats.sol#384) is a local variable never initialized
StdCheatsSafe.readEIP1559ScriptArtifact(string).artifact (lib/forge-std/src/StdCheats.sol#364) is a local variable never initialized
stdStorageSafe.bytesToBytes32(bytes,uint256).out (lib/forge-std/src/StdStorage.sol#276) is a local variable never initialized
StdCheatsSafe.rawToConvertedEIP1559Detail(StdCheatsSafe.RawTx1559Detail).txDetail (lib/forge-std/src/StdCheats.sol#396) is a local variable never initialized
StdCheatsSafe.rawToConvertedReceipt(StdCheatsSafe.RawReceipt).receipt (lib/forge-std/src/StdCheats.sol#452) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
StdCheatsSafe.isFork() (lib/forge-std/src/StdCheats.sol#571-577) ignores return value by vm.activeFork() (lib/forge-std/src/StdCheats.sol#574-576)
stdStorageSafe.find(StdStorage,bool) (lib/forge-std/src/StdStorage.sol#105-163) ignores return value by (reads,None) = vm.accesses(address(who)) (lib/forge-std/src/StdStorage.sol#117-119)
stdStorageSafe.root(StdStorage) (lib/forge-std/src/StdStorage.sol#253-272) ignores return value by (found,None,parent_slot) = vm.getMappingKeyAndParentOf(who,bytes32(child)) (lib/forge-std/src/StdStorage.sol#261-263)
stdStorageSafe.root(StdStorage) (lib/forge-std/src/StdStorage.sol#253-272) ignores return value by (found,None,parent_slot) = vm.getMappingKeyAndParentOf(who,bytes32(root_slot)) (lib/forge-std/src/StdStorage.sol#270-272)
stdStorage.parent(StdStorage) (lib/forge-std/src/StdStorage.sol#451-454) ignores return value by stdStorageSafe.parent(self) (lib/forge-std/src/StdStorage.sol#454)
StdUtils.getTokenBalances(address,address[]) (lib/forge-std/src/StdUtils.sol#130-157) ignores return value by (None,returnData) = multicall.aggregate(calls) (lib/forge-std/src/StdUtils.sol#150)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
FractionalizedNFT.constructor(string,string).name (src/FractionalizedNFT.sol#63) shadows:
        - ERC721.name() (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#68-74) (function)
        - IERC721Metadata.name() (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol#14-16) (function)
FractionalizedNFT.constructor(string,string).symbol (src/FractionalizedNFT.sol#63-64) shadows:
        - ERC721.symbol() (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#75-81) (function)
        - IERC721Metadata.symbol() (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol#19-21) (function)
FractionalizedNFT.mint(address,uint256,string,string,string,uint256,uint256,bool).name (src/FractionalizedNFT.sol#81-83) shadows:
        - ERC721.name() (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#68-74) (function)
        - IERC721Metadata.name() (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol#14-16) (function)
FractionalizedNFT.getMetadata(uint256).name (src/FractionalizedNFT.sol#323) shadows:
        - ERC721.name() (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#68-74) (function)
        - IERC721Metadata.name() (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol#14-16) (function)
FractionalizedNFT.getFraction(uint256,address).owner (src/FractionalizedNFT.sol#361) shadows:
        - Ownable.owner() (lib/openzeppelin-contracts/contracts/access/Ownable.sol#54-56) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Modifier StdCheatsSafe.skipWhenForking() (lib/forge-std/src/StdCheats.sol#577-579) does not always execute _; or revert
Modifier StdCheatsSafe.skipWhenNotForking() (lib/forge-std/src/StdCheats.sol#579-583) does not always execute _; or revert
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier
INFO:Detectors:
Reentrancy in FractionalizedNFT.mint(address,uint256,string,string,string,uint256,uint256,bool) (src/FractionalizedNFT.sol#81-113):
        External calls:
        - _safeMint(to,tokenId) (src/FractionalizedNFT.sol#90-91)
                - retval = IERC721Receiver(to).onERC721Received(operator,from,tokenId,data) (lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol#32-45)
                - ERC721Utils.checkOnERC721Received(_msgSender(),address(0),to,tokenId,data) (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#310)
        State variables written after the call(s):
        - _fractionOwners[tokenId].push(to) (src/FractionalizedNFT.sol#111-112)
        - _fractions[tokenId][to] = Fraction({owner:to,amount:totalFractions,isDelegate:false,delegatedTo:address(0),hasVoted:false,lastVoteTimestamp:0}) (src/FractionalizedNFT.sol#103-110)
        - _metadata[tokenId] = NFTMetadata({name:name,description:description,uri:uri,royaltyPercentage:royaltyPercentage,totalFractions:totalFractions,availableFractions:totalFractions,accumulatedRoyalties:0,isEligibleForRageQuit:eligibleForRageQuit}) (src/FractionalizedNFT.sol#91-102)
        - _updateVotingPower(to) (src/FractionalizedNFT.sol#112-113)
                - _votingPower[account] = power (src/FractionalizedNFT.sol#418)
Reentrancy in StdCheatsSafe.noGasMetering() (lib/forge-std/src/StdCheats.sol#583-610):
        External calls:
        - vm.pauseGasMetering() (lib/forge-std/src/StdCheats.sol#583-584)
        State variables written after the call(s):
        - gasMeteringOff = true (lib/forge-std/src/StdCheats.sol#607)
        - gasMeteringOff = false (lib/forge-std/src/StdCheats.sol#609)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in stdStorageSafe.find(StdStorage,bool) (lib/forge-std/src/StdStorage.sol#105-163):
        External calls:
        - vm.record() (lib/forge-std/src/StdStorage.sol#116-117)
        - (reads,None) = vm.accesses(address(who)) (lib/forge-std/src/StdStorage.sol#117-119)
        - ! checkSlotMutatesCall(self,reads[i]) (lib/forge-std/src/StdStorage.sol#128-129)
                - vm.store(self._target,slot,testVal) (lib/forge-std/src/StdStorage.sol#59)
                - vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#62)
        - (found,offsetLeft,offsetRight) = findOffsets(self,reads[i]) (lib/forge-std/src/StdStorage.sol#136-138)
                - vm.store(self._target,slot,bytes32(valueToPut)) (lib/forge-std/src/StdStorage.sol#73)
                - vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#91)
        Event emitted after the call(s):
        - SlotFound(who,fsig,keccak256(bytes)(abi.encodePacked(params,field_depth)),uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#147-150)
        - WARNING_UninitedSlot(who,uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#126-127)
Reentrancy in stdStorageSafe.parent(StdStorage) (lib/forge-std/src/StdStorage.sol#239-253):
        External calls:
        - vm.startMappingRecording() (lib/forge-std/src/StdStorage.sol#243-244)
        - child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#244-247)
                - vm.store(self._target,slot,testVal) (lib/forge-std/src/StdStorage.sol#59)
                - vm.store(self._target,slot,bytes32(valueToPut)) (lib/forge-std/src/StdStorage.sol#73)
                - vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#91)
                - vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#62)
                - vm.record() (lib/forge-std/src/StdStorage.sol#116-117)
                - (reads,None) = vm.accesses(address(who)) (lib/forge-std/src/StdStorage.sol#117-119)
        Event emitted after the call(s):
        - SlotFound(who,fsig,keccak256(bytes)(abi.encodePacked(params,field_depth)),uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#147-150)
                - child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#244-247)
        - WARNING_UninitedSlot(who,uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#126-127)
                - child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#244-247)
Reentrancy in stdStorageSafe.root(StdStorage) (lib/forge-std/src/StdStorage.sol#253-272):
        External calls:
        - vm.startMappingRecording() (lib/forge-std/src/StdStorage.sol#255-256)
        - child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#257-258)
                - vm.store(self._target,slot,testVal) (lib/forge-std/src/StdStorage.sol#59)
                - vm.store(self._target,slot,bytes32(valueToPut)) (lib/forge-std/src/StdStorage.sol#73)
                - vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#91)
                - vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#62)
                - vm.record() (lib/forge-std/src/StdStorage.sol#116-117)
                - (reads,None) = vm.accesses(address(who)) (lib/forge-std/src/StdStorage.sol#117-119)
        Event emitted after the call(s):
        - SlotFound(who,fsig,keccak256(bytes)(abi.encodePacked(params,field_depth)),uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#147-150)
                - child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#257-258)
        - WARNING_UninitedSlot(who,uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#126-127)
                - child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#257-258)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
FractionalizedNFT.transferFractions(uint256,address,uint256) (src/FractionalizedNFT.sol#122-155) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(senderFraction.owner == msg.sender,Not the fraction owner) (src/FractionalizedNFT.sol#129-131)
        - require(bool,string)(senderFraction.amount >= amount,Insufficient fraction balance) (src/FractionalizedNFT.sol#131-132)
        - require(bool,string)(! senderFraction.hasVoted,Cannot transfer after voting) (src/FractionalizedNFT.sol#132-133)
        - require(bool,string)(senderFraction.delegatedTo == address(0),Cannot transfer delegated fractions) (src/FractionalizedNFT.sol#133-134)
FractionalizedNFT.delegateFractions(uint256,address,uint256) (src/FractionalizedNFT.sol#165-200) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(senderFraction.owner == msg.sender,Not the fraction owner) (src/FractionalizedNFT.sol#173-174)
        - require(bool,string)(senderFraction.amount >= amount,Insufficient fraction balance) (src/FractionalizedNFT.sol#174-176)
        - require(bool,string)(! senderFraction.hasVoted,Cannot delegate after voting) (src/FractionalizedNFT.sol#176-177)
        - require(bool,string)(senderFraction.delegatedTo == address(0),Already delegated) (src/FractionalizedNFT.sol#177-178)
FractionalizedNFT.castVote(uint256,uint256) (src/FractionalizedNFT.sol#210-223) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(fraction.amount > 0,No fractions to vote with) (src/FractionalizedNFT.sol#216-217)
        - require(bool,string)(! fraction.hasVoted,Fractions already used for voting) (src/FractionalizedNFT.sol#217-218)
FractionalizedNFT.claimRoyalties(uint256) (src/FractionalizedNFT.sol#276-297) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(fraction.owner == msg.sender,Not the fraction owner) (src/FractionalizedNFT.sol#283-284)
        - require(bool,string)(fraction.amount > 0,No fractions owned) (src/FractionalizedNFT.sol#285-286)
FractionalizedNFT._burnFractions(address,uint256) (src/FractionalizedNFT.sol#390-403) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(fraction.owner == account,Not the fraction owner) (src/FractionalizedNFT.sol#392-395)
Governance.vote(uint256) (src/Governance.sol#50-65) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(block.timestamp >= proposals[proposalId].startTime,Voting hasn't started) (src/Governance.sol#55-56)
        - require(bool,string)(block.timestamp <= proposals[proposalId].endTime,Voting ended) (src/Governance.sol#56-57)
Governance.finalizeProposal(uint256) (src/Governance.sol#66-78) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(block.timestamp > p.endTime,Voting still ongoing) (src/Governance.sol#73-74)
Governance.approveExecution(uint256) (src/Governance.sol#79-93) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(p.state == ProposalState.Passed,Not passed) (src/Governance.sol#84-85)
Governance.executeProposal(uint256) (src/Governance.sol#93-103) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(p.state == ProposalState.Passed,Not approved) (src/Governance.sol#98-99)
        - require(bool,string)(p.approvals >= requiredApprovals,Insufficient approvals) (src/Governance.sol#99-100)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
StdChains.getChainWithUpdatedRpcUrl(string,StdChains.Chain) (lib/forge-std/src/StdChains.sol#146-179) uses assembly
        - INLINE ASM (lib/forge-std/src/StdChains.sol#175-177)
StdCheatsSafe.assumeNotBlacklisted(address,address) (lib/forge-std/src/StdCheats.sol#200-224) uses assembly
        - INLINE ASM (lib/forge-std/src/StdCheats.sol#208-209)
StdCheatsSafe.assumeUnusedAddress(address) (lib/forge-std/src/StdCheats.sol#341-348) uses assembly
        - INLINE ASM (lib/forge-std/src/StdCheats.sol#345-346)
StdCheatsSafe.deployCode(string,bytes) (lib/forge-std/src/StdCheats.sol#490-500) uses assembly
        - INLINE ASM (lib/forge-std/src/StdCheats.sol#493-496)
StdCheatsSafe.deployCode(string) (lib/forge-std/src/StdCheats.sol#500-506) uses assembly
        - INLINE ASM (lib/forge-std/src/StdCheats.sol#503-504)
StdCheatsSafe.deployCode(string,bytes,uint256) (lib/forge-std/src/StdCheats.sol#509-519) uses assembly
        - INLINE ASM (lib/forge-std/src/StdCheats.sol#514-516)
StdCheatsSafe.deployCode(string,uint256) (lib/forge-std/src/StdCheats.sol#519-527) uses assembly
        - INLINE ASM (lib/forge-std/src/StdCheats.sol#524-525)
StdCheatsSafe._viewChainId() (lib/forge-std/src/StdCheats.sol#616-627) uses assembly
        - INLINE ASM (lib/forge-std/src/StdCheats.sol#621-622)
StdCheatsSafe._pureChainId() (lib/forge-std/src/StdCheats.sol#627-630) uses assembly
        - INLINE ASM (lib/forge-std/src/StdCheats.sol#629)
stdStorageSafe.flatten(bytes32[]) (lib/forge-std/src/StdStorage.sol#282-293) uses assembly
        - INLINE ASM (lib/forge-std/src/StdStorage.sol#289-292)
stdStorageSafe.getMaskByOffsets(uint256,uint256) (lib/forge-std/src/StdStorage.sol#308-316) uses assembly
        - INLINE ASM (lib/forge-std/src/StdStorage.sol#315-316)
stdStorage.checked_write(StdStorage,bool) (lib/forge-std/src/StdStorage.sol#389-394) uses assembly
        - INLINE ASM (lib/forge-std/src/StdStorage.sol#393)
StdUtils.getTokenBalances(address,address[]) (lib/forge-std/src/StdUtils.sol#130-157) uses assembly
        - INLINE ASM (lib/forge-std/src/StdUtils.sol#134-137)
StdUtils._castLogPayloadViewToPure(function(bytes)) (lib/forge-std/src/StdUtils.sol#172-174) uses assembly
        - INLINE ASM (lib/forge-std/src/StdUtils.sol#174)
StdUtils._sendLogPayloadView(bytes) (lib/forge-std/src/StdUtils.sol#180-191) uses assembly
        - INLINE ASM (lib/forge-std/src/StdUtils.sol#188-191)
console._sendLogPayloadImplementation(bytes) (lib/forge-std/src/console.sol#6-21) uses assembly
        - INLINE ASM (lib/forge-std/src/console.sol#10-21)
console._castToPure(function(bytes)) (lib/forge-std/src/console.sol#22-29) uses assembly
        - INLINE ASM (lib/forge-std/src/console.sol#27-29)
safeconsole._sendLogPayload(uint256,uint256) (lib/forge-std/src/safeconsole.sol#10-18) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#14-16)
safeconsole._sendLogPayloadView(uint256,uint256) (lib/forge-std/src/safeconsole.sol#18-24) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#22-24)
safeconsole._memcopy(uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#24-35) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#31-33)
safeconsole._memcopyView(uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#35-41) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#39-41)
safeconsole.logMemory(uint256,uint256) (lib/forge-std/src/safeconsole.sol#41-93) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#51-59)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#61-65)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#73-77)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#80-85)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#89-93)
safeconsole.log(address) (lib/forge-std/src/safeconsole.sol#93-111) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#99-106)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#108-111)
safeconsole.log(bool) (lib/forge-std/src/safeconsole.sol#111-130) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#118-124)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#127-130)
safeconsole.log(uint256) (lib/forge-std/src/safeconsole.sol#130-148) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#137-143)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#145-148)
safeconsole.log(bytes32) (lib/forge-std/src/safeconsole.sol#148-180) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#156-173)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#175-180)
safeconsole.log(address,address) (lib/forge-std/src/safeconsole.sol#180-202) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#186-196)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#198-202)
safeconsole.log(address,bool) (lib/forge-std/src/safeconsole.sol#203-224) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#208-218)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#221-224)
safeconsole.log(address,uint256) (lib/forge-std/src/safeconsole.sol#224-246) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#230-241)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#244-246)
safeconsole.log(address,bytes32) (lib/forge-std/src/safeconsole.sol#247-282) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#254-275)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#278-282)
safeconsole.log(bool,address) (lib/forge-std/src/safeconsole.sol#282-305) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#288-299)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#302-304)
safeconsole.log(bool,bool) (lib/forge-std/src/safeconsole.sol#305-327) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#310-321)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#324-327)
safeconsole.log(bool,uint256) (lib/forge-std/src/safeconsole.sol#327-350) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#332-343)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#346-349)
safeconsole.log(bool,bytes32) (lib/forge-std/src/safeconsole.sol#350-385) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#356-377)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#380-385)
safeconsole.log(uint256,address) (lib/forge-std/src/safeconsole.sol#385-408) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#391-401)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#404-408)
safeconsole.log(uint256,bool) (lib/forge-std/src/safeconsole.sol#408-430) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#412-422)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#426-430)
safeconsole.log(uint256,uint256) (lib/forge-std/src/safeconsole.sol#430-452) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#435-443)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#448-452)
safeconsole.log(uint256,bytes32) (lib/forge-std/src/safeconsole.sol#453-488) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#458-481)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#483-488)
safeconsole.log(bytes32,address) (lib/forge-std/src/safeconsole.sol#488-524) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#494-517)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#519-524)
safeconsole.log(bytes32,bool) (lib/forge-std/src/safeconsole.sol#524-560) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#530-554)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#556-560)
safeconsole.log(bytes32,uint256) (lib/forge-std/src/safeconsole.sol#560-596) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#566-591)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#592-595)
safeconsole.log(bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#596-638) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#603-630)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#632-638)
safeconsole.log(address,address,address) (lib/forge-std/src/safeconsole.sol#639-664) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#644-655)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#658-663)
safeconsole.log(address,address,bool) (lib/forge-std/src/safeconsole.sol#664-689) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#671-680)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#683-689)
safeconsole.log(address,address,uint256) (lib/forge-std/src/safeconsole.sol#689-716) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#697-707)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#710-716)
safeconsole.log(address,address,bytes32) (lib/forge-std/src/safeconsole.sol#716-757) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#725-752)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#754-757)
safeconsole.log(address,bool,address) (lib/forge-std/src/safeconsole.sol#757-780) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#763-772)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#775-780)
safeconsole.log(address,bool,bool) (lib/forge-std/src/safeconsole.sol#780-806) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#789-798)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#801-806)
safeconsole.log(address,bool,uint256) (lib/forge-std/src/safeconsole.sol#806-832) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#815-824)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#828-832)
safeconsole.log(address,bool,bytes32) (lib/forge-std/src/safeconsole.sol#832-876) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#842-869)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#872-876)
safeconsole.log(address,uint256,address) (lib/forge-std/src/safeconsole.sol#876-898) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#881-890)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#894-898)
safeconsole.log(address,uint256,bool) (lib/forge-std/src/safeconsole.sol#898-924) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#906-917)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#919-924)
safeconsole.log(address,uint256,uint256) (lib/forge-std/src/safeconsole.sol#924-950) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#933-944)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#945-950)
safeconsole.log(address,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#951-997) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#960-987)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#990-997)
safeconsole.log(address,bytes32,address) (lib/forge-std/src/safeconsole.sol#997-1037) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1001-1025)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1029-1037)
safeconsole.log(address,bytes32,bool) (lib/forge-std/src/safeconsole.sol#1037-1076) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1041-1064)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1069-1076)
safeconsole.log(address,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#1076-1116) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1081-1104)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1108-1116)
safeconsole.log(address,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#1117-1162) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1122-1150)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1152-1162)
safeconsole.log(bool,address,address) (lib/forge-std/src/safeconsole.sol#1163-1181) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1166-1175)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1177-1181)
safeconsole.log(bool,address,bool) (lib/forge-std/src/safeconsole.sol#1181-1208) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1188-1199)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1204-1208)
safeconsole.log(bool,address,uint256) (lib/forge-std/src/safeconsole.sol#1208-1234) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1213-1226)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1229-1234)
safeconsole.log(bool,address,bytes32) (lib/forge-std/src/safeconsole.sol#1234-1280) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1241-1268)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1271-1280)
safeconsole.log(bool,bool,address) (lib/forge-std/src/safeconsole.sol#1280-1300) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1287-1293)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1296-1300)
safeconsole.log(bool,bool,bool) (lib/forge-std/src/safeconsole.sol#1300-1326) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1305-1316)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1321-1326)
safeconsole.log(bool,bool,uint256) (lib/forge-std/src/safeconsole.sol#1326-1352) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1332-1342)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1346-1352)
safeconsole.log(bool,bool,bytes32) (lib/forge-std/src/safeconsole.sol#1352-1395) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1359-1386)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1389-1395)
safeconsole.log(bool,uint256,address) (lib/forge-std/src/safeconsole.sol#1396-1418) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1404-1413)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1415-1418)
safeconsole.log(bool,uint256,bool) (lib/forge-std/src/safeconsole.sol#1418-1443) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1424-1434)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1437-1443)
safeconsole.log(bool,uint256,uint256) (lib/forge-std/src/safeconsole.sol#1443-1470) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1451-1460)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1463-1470)
safeconsole.log(bool,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#1470-1514) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1478-1505)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1508-1514)
safeconsole.log(bool,bytes32,address) (lib/forge-std/src/safeconsole.sol#1514-1553) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1524-1545)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1547-1553)
safeconsole.log(bool,bytes32,bool) (lib/forge-std/src/safeconsole.sol#1554-1592) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1561-1584)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1587-1592)
safeconsole.log(bool,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#1593-1632) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1601-1624)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1627-1632)
safeconsole.log(bool,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#1633-1679) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1642-1668)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1670-1678)
safeconsole.log(uint256,address,address) (lib/forge-std/src/safeconsole.sol#1679-1703) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1688-1699)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1701-1703)
safeconsole.log(uint256,address,bool) (lib/forge-std/src/safeconsole.sol#1703-1725) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1709-1718)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1721-1725)
safeconsole.log(uint256,address,uint256) (lib/forge-std/src/safeconsole.sol#1726-1751) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1732-1745)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1747-1751)
safeconsole.log(uint256,address,bytes32) (lib/forge-std/src/safeconsole.sol#1752-1798) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1760-1787)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1790-1798)
safeconsole.log(uint256,bool,address) (lib/forge-std/src/safeconsole.sol#1798-1824) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1803-1817)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1819-1824)
safeconsole.log(uint256,bool,bool) (lib/forge-std/src/safeconsole.sol#1825-1843) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1828-1837)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1839-1843)
safeconsole.log(uint256,bool,uint256) (lib/forge-std/src/safeconsole.sol#1843-1869) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1850-1863)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1865-1869)
safeconsole.log(uint256,bool,bytes32) (lib/forge-std/src/safeconsole.sol#1869-1916) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1877-1904)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1907-1915)
safeconsole.log(uint256,uint256,address) (lib/forge-std/src/safeconsole.sol#1916-1942) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1922-1932)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1935-1941)
safeconsole.log(uint256,uint256,bool) (lib/forge-std/src/safeconsole.sol#1942-1962) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1949-1955)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1958-1961)
safeconsole.log(uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#1962-1989) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1968-1980)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1984-1988)
safeconsole.log(uint256,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#1989-2034) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1995-2022)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2025-2034)
safeconsole.log(uint256,bytes32,address) (lib/forge-std/src/safeconsole.sol#2034-2075) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2042-2069)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2072-2075)
safeconsole.log(uint256,bytes32,bool) (lib/forge-std/src/safeconsole.sol#2075-2115) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2082-2109)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2111-2115)
safeconsole.log(uint256,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#2115-2155) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2121-2148)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2152-2155)
safeconsole.log(uint256,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#2155-2199) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2162-2193)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2195-2199)
safeconsole.log(bytes32,address,address) (lib/forge-std/src/safeconsole.sol#2200-2240) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2206-2235)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2237-2240)
safeconsole.log(bytes32,address,bool) (lib/forge-std/src/safeconsole.sol#2240-2283) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2247-2273)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2276-2283)
safeconsole.log(bytes32,address,uint256) (lib/forge-std/src/safeconsole.sol#2283-2323) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2287-2313)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2315-2323)
safeconsole.log(bytes32,address,bytes32) (lib/forge-std/src/safeconsole.sol#2323-2366) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2328-2357)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2361-2366)
safeconsole.log(bytes32,bool,address) (lib/forge-std/src/safeconsole.sol#2367-2409) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2373-2398)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2403-2409)
safeconsole.log(bytes32,bool,bool) (lib/forge-std/src/safeconsole.sol#2409-2448) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2412-2436)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2439-2448)
safeconsole.log(bytes32,bool,uint256) (lib/forge-std/src/safeconsole.sol#2449-2487) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2455-2476)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2479-2487)
safeconsole.log(bytes32,bool,bytes32) (lib/forge-std/src/safeconsole.sol#2488-2535) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2496-2520)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2526-2534)
safeconsole.log(bytes32,uint256,address) (lib/forge-std/src/safeconsole.sol#2535-2575) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2539-2562)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2567-2575)
safeconsole.log(bytes32,uint256,bool) (lib/forge-std/src/safeconsole.sol#2575-2612) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2580-2602)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2605-2612)
safeconsole.log(bytes32,uint256,uint256) (lib/forge-std/src/safeconsole.sol#2613-2651) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2622-2642)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2645-2651)
safeconsole.log(bytes32,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#2652-2699) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2663-2686)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2689-2699)
safeconsole.log(bytes32,bytes32,address) (lib/forge-std/src/safeconsole.sol#2699-2747) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2708-2732)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2736-2747)
safeconsole.log(bytes32,bytes32,bool) (lib/forge-std/src/safeconsole.sol#2747-2793) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2753-2778)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2781-2792)
safeconsole.log(bytes32,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#2793-2839) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2799-2825)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2828-2838)
safeconsole.log(bytes32,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#2839-2893) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2847-2876)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2880-2893)
safeconsole.log(address,address,address,address) (lib/forge-std/src/safeconsole.sol#2893-2916) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2897-2908)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2910-2916)
safeconsole.log(address,address,address,bool) (lib/forge-std/src/safeconsole.sol#2916-2945) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2923-2940)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2943-2945)
safeconsole.log(address,address,address,uint256) (lib/forge-std/src/safeconsole.sol#2946-2971) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2951-2963)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2965-2970)
safeconsole.log(address,address,address,bytes32) (lib/forge-std/src/safeconsole.sol#2971-3021) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2980-3008)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3011-3021)
safeconsole.log(address,address,bool,address) (lib/forge-std/src/safeconsole.sol#3021-3051) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3029-3040)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3043-3050)
safeconsole.log(address,address,bool,bool) (lib/forge-std/src/safeconsole.sol#3051-3080) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3058-3070)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3073-3079)
safeconsole.log(address,address,bool,uint256) (lib/forge-std/src/safeconsole.sol#3080-3104) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3088-3097)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3100-3103)
safeconsole.log(address,address,bool,bytes32) (lib/forge-std/src/safeconsole.sol#3104-3154) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3113-3141)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3144-3154)
safeconsole.log(address,address,uint256,address) (lib/forge-std/src/safeconsole.sol#3154-3185) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3162-3174)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3177-3183)
safeconsole.log(address,address,uint256,bool) (lib/forge-std/src/safeconsole.sol#3185-3212) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3192-3203)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3206-3212)
safeconsole.log(address,address,uint256,uint256) (lib/forge-std/src/safeconsole.sol#3212-3239) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3223-3231)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3234-3239)
safeconsole.log(address,address,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#3239-3286) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3247-3275)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3278-3286)
safeconsole.log(address,address,bytes32,address) (lib/forge-std/src/safeconsole.sol#3286-3336) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3297-3325)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3329-3336)
safeconsole.log(address,address,bytes32,bool) (lib/forge-std/src/safeconsole.sol#3336-3378) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3344-3369)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3372-3378)
safeconsole.log(address,address,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#3379-3423) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3387-3413)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3416-3423)
safeconsole.log(address,address,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#3423-3472) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3432-3461)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3464-3472)
safeconsole.log(address,bool,address,address) (lib/forge-std/src/safeconsole.sol#3472-3501) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3480-3495)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3498-3501)
safeconsole.log(address,bool,address,bool) (lib/forge-std/src/safeconsole.sol#3501-3526) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3506-3517)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3521-3526)
safeconsole.log(address,bool,address,uint256) (lib/forge-std/src/safeconsole.sol#3526-3553) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3534-3548)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3549-3553)
safeconsole.log(address,bool,address,bytes32) (lib/forge-std/src/safeconsole.sol#3553-3599) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3562-3590)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3593-3599)
safeconsole.log(address,bool,bool,address) (lib/forge-std/src/safeconsole.sol#3600-3630) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3607-3622)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3625-3630)
safeconsole.log(address,bool,bool,bool) (lib/forge-std/src/safeconsole.sol#3630-3660) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3637-3651)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3654-3660)
safeconsole.log(address,bool,bool,uint256) (lib/forge-std/src/safeconsole.sol#3660-3690) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3666-3680)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3685-3690)
safeconsole.log(address,bool,bool,bytes32) (lib/forge-std/src/safeconsole.sol#3690-3733) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3694-3721)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3725-3733)
safeconsole.log(address,bool,uint256,address) (lib/forge-std/src/safeconsole.sol#3734-3764) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3740-3755)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3757-3764)
safeconsole.log(address,bool,uint256,bool) (lib/forge-std/src/safeconsole.sol#3764-3794) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3770-3784)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3787-3794)
safeconsole.log(address,bool,uint256,uint256) (lib/forge-std/src/safeconsole.sol#3794-3825) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3800-3813)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3817-3825)
safeconsole.log(address,bool,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#3825-3868) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3830-3855)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3858-3868)
safeconsole.log(address,bool,bytes32,address) (lib/forge-std/src/safeconsole.sol#3868-3914) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3875-3905)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3907-3914)
safeconsole.log(address,bool,bytes32,bool) (lib/forge-std/src/safeconsole.sol#3915-3965) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3924-3954)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3956-3965)
safeconsole.log(address,bool,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#3965-4009) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3970-3996)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4000-4008)
safeconsole.log(address,bool,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#4009-4057) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4015-4045)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4048-4057)
safeconsole.log(address,uint256,address,address) (lib/forge-std/src/safeconsole.sol#4057-4082) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4062-4073)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4077-4082)
safeconsole.log(address,uint256,address,bool) (lib/forge-std/src/safeconsole.sol#4082-4109) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4090-4102)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4104-4108)
safeconsole.log(address,uint256,address,uint256) (lib/forge-std/src/safeconsole.sol#4109-4138) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4115-4128)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4131-4138)
safeconsole.log(address,uint256,address,bytes32) (lib/forge-std/src/safeconsole.sol#4138-4181) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4148-4170)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4173-4180)
safeconsole.log(address,uint256,bool,address) (lib/forge-std/src/safeconsole.sol#4181-4210) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4189-4201)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4204-4210)
safeconsole.log(address,uint256,bool,bool) (lib/forge-std/src/safeconsole.sol#4210-4240) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4219-4231)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4234-4240)
safeconsole.log(address,uint256,bool,uint256) (lib/forge-std/src/safeconsole.sol#4240-4270) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4249-4262)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4264-4270)
safeconsole.log(address,uint256,bool,bytes32) (lib/forge-std/src/safeconsole.sol#4270-4313) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4280-4304)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4305-4313)
safeconsole.log(address,uint256,uint256,address) (lib/forge-std/src/safeconsole.sol#4313-4343) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4321-4336)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4338-4343)
safeconsole.log(address,uint256,uint256,bool) (lib/forge-std/src/safeconsole.sol#4343-4373) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4351-4366)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4369-4373)
safeconsole.log(address,uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#4373-4403) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4381-4396)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4399-4403)
safeconsole.log(address,uint256,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#4404-4447) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4413-4438)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4441-4447)
safeconsole.log(address,uint256,bytes32,address) (lib/forge-std/src/safeconsole.sol#4447-4497) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4456-4485)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4488-4497)
safeconsole.log(address,uint256,bytes32,bool) (lib/forge-std/src/safeconsole.sol#4497-4545) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4506-4535)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4538-4544)
safeconsole.log(address,uint256,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#4545-4588) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4556-4579)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4580-4588)
safeconsole.log(address,uint256,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#4588-4638) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4601-4625)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4628-4638)
safeconsole.log(address,bytes32,address,address) (lib/forge-std/src/safeconsole.sol#4638-4682) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4648-4671)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4674-4681)
safeconsole.log(address,bytes32,address,bool) (lib/forge-std/src/safeconsole.sol#4682-4724) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4691-4715)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4717-4724)
safeconsole.log(address,bytes32,address,uint256) (lib/forge-std/src/safeconsole.sol#4725-4769) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4736-4760)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4763-4769)
safeconsole.log(address,bytes32,address,bytes32) (lib/forge-std/src/safeconsole.sol#4769-4818) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4779-4808)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4811-4818)
safeconsole.log(address,bytes32,bool,address) (lib/forge-std/src/safeconsole.sol#4819-4862) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4828-4853)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4856-4862)
safeconsole.log(address,bytes32,bool,bool) (lib/forge-std/src/safeconsole.sol#4862-4905) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4871-4896)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4899-4905)
safeconsole.log(address,bytes32,bool,uint256) (lib/forge-std/src/safeconsole.sol#4905-4950) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4914-4940)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4943-4950)
safeconsole.log(address,bytes32,bool,bytes32) (lib/forge-std/src/safeconsole.sol#4951-4999) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4960-4989)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4990-4999)
safeconsole.log(address,bytes32,uint256,address) (lib/forge-std/src/safeconsole.sol#4999-5044) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5008-5034)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5037-5044)
safeconsole.log(address,bytes32,uint256,bool) (lib/forge-std/src/safeconsole.sol#5044-5088) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5052-5079)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5080-5087)
safeconsole.log(address,bytes32,uint256,uint256) (lib/forge-std/src/safeconsole.sol#5088-5132) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5095-5124)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5126-5132)
safeconsole.log(address,bytes32,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#5132-5182) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5141-5174)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5174-5182)
safeconsole.log(address,bytes32,bytes32,address) (lib/forge-std/src/safeconsole.sol#5182-5231) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5191-5221)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5222-5231)
safeconsole.log(address,bytes32,bytes32,bool) (lib/forge-std/src/safeconsole.sol#5231-5280) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5240-5269)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5272-5280)
safeconsole.log(address,bytes32,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#5280-5331) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5291-5320)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5323-5330)
safeconsole.log(address,bytes32,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#5331-5387) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5342-5375)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5377-5387)
safeconsole.log(bool,address,address,address) (lib/forge-std/src/safeconsole.sol#5387-5416) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5395-5411)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5414-5416)
safeconsole.log(bool,address,address,bool) (lib/forge-std/src/safeconsole.sol#5417-5442) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5422-5433)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5436-5442)
safeconsole.log(bool,address,address,uint256) (lib/forge-std/src/safeconsole.sol#5442-5470) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5450-5465)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5467-5470)
safeconsole.log(bool,address,address,bytes32) (lib/forge-std/src/safeconsole.sol#5470-5519) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5478-5505)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5509-5518)
safeconsole.log(bool,address,bool,address) (lib/forge-std/src/safeconsole.sol#5519-5541) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5523-5534)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5536-5540)
safeconsole.log(bool,address,bool,bool) (lib/forge-std/src/safeconsole.sol#5541-5570) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5548-5560)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5564-5570)
safeconsole.log(bool,address,bool,uint256) (lib/forge-std/src/safeconsole.sol#5571-5601) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5577-5590)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5595-5601)
safeconsole.log(bool,address,bool,bytes32) (lib/forge-std/src/safeconsole.sol#5601-5647) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5608-5638)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5640-5647)
safeconsole.log(bool,address,uint256,address) (lib/forge-std/src/safeconsole.sol#5647-5674) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5657-5669)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5670-5674)
safeconsole.log(bool,address,uint256,bool) (lib/forge-std/src/safeconsole.sol#5674-5703) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5681-5693)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5696-5702)
safeconsole.log(bool,address,uint256,uint256) (lib/forge-std/src/safeconsole.sol#5703-5733) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5712-5723)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5726-5733)
safeconsole.log(bool,address,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#5733-5781) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5743-5772)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5775-5781)
safeconsole.log(bool,address,bytes32,address) (lib/forge-std/src/safeconsole.sol#5781-5825) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5790-5816)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5819-5825)
safeconsole.log(bool,address,bytes32,bool) (lib/forge-std/src/safeconsole.sol#5825-5875) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5834-5863)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5866-5875)
safeconsole.log(bool,address,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#5875-5922) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5884-5913)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5915-5922)
safeconsole.log(bool,address,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#5923-5972) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5933-5960)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5963-5972)
safeconsole.log(bool,bool,address,address) (lib/forge-std/src/safeconsole.sol#5973-5999) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5982-5992)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5993-5999)
safeconsole.log(bool,bool,address,bool) (lib/forge-std/src/safeconsole.sol#5999-6029) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6005-6018)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6023-6028)
safeconsole.log(bool,bool,address,uint256) (lib/forge-std/src/safeconsole.sol#6029-6051) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6035-6044)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6047-6051)
safeconsole.log(bool,bool,address,bytes32) (lib/forge-std/src/safeconsole.sol#6052-6095) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6060-6086)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6089-6095)
safeconsole.log(bool,bool,bool,address) (lib/forge-std/src/safeconsole.sol#6095-6126) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6102-6117)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6121-6126)
safeconsole.log(bool,bool,bool,bool) (lib/forge-std/src/safeconsole.sol#6127-6148) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6130-6141)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6143-6148)
safeconsole.log(bool,bool,bool,uint256) (lib/forge-std/src/safeconsole.sol#6149-6178) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6156-6171)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6174-6178)
safeconsole.log(bool,bool,bool,bytes32) (lib/forge-std/src/safeconsole.sol#6179-6227) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6187-6216)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6219-6227)
safeconsole.log(bool,bool,uint256,address) (lib/forge-std/src/safeconsole.sol#6228-6258) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6236-6248)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6251-6258)
safeconsole.log(bool,bool,uint256,bool) (lib/forge-std/src/safeconsole.sol#6258-6282) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6266-6274)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6277-6282)
safeconsole.log(bool,bool,uint256,uint256) (lib/forge-std/src/safeconsole.sol#6282-6313) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6290-6303)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6307-6313)
safeconsole.log(bool,bool,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#6313-6360) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6320-6349)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6352-6360)
safeconsole.log(bool,bool,bytes32,address) (lib/forge-std/src/safeconsole.sol#6361-6408) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6371-6400)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6404-6408)
safeconsole.log(bool,bool,bytes32,bool) (lib/forge-std/src/safeconsole.sol#6409-6454) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6415-6443)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6447-6454)
safeconsole.log(bool,bool,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#6454-6503) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6462-6491)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6494-6503)
safeconsole.log(bool,bool,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#6503-6554) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6514-6546)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6546-6554)
safeconsole.log(bool,uint256,address,address) (lib/forge-std/src/safeconsole.sol#6554-6584) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6560-6573)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6577-6584)
safeconsole.log(bool,uint256,address,bool) (lib/forge-std/src/safeconsole.sol#6584-6607) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6591-6600)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6603-6607)
safeconsole.log(bool,uint256,address,uint256) (lib/forge-std/src/safeconsole.sol#6607-6636) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6615-6630)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6633-6636)
safeconsole.log(bool,uint256,address,bytes32) (lib/forge-std/src/safeconsole.sol#6636-6681) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6643-6671)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6675-6681)
safeconsole.log(bool,uint256,bool,address) (lib/forge-std/src/safeconsole.sol#6681-6705) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6685-6697)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6699-6705)
safeconsole.log(bool,uint256,bool,bool) (lib/forge-std/src/safeconsole.sol#6706-6733) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6714-6728)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6729-6732)
safeconsole.log(bool,uint256,bool,uint256) (lib/forge-std/src/safeconsole.sol#6733-6760) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6740-6751)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6754-6760)
safeconsole.log(bool,uint256,bool,bytes32) (lib/forge-std/src/safeconsole.sol#6760-6810) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6771-6798)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6802-6810)
safeconsole.log(bool,uint256,uint256,address) (lib/forge-std/src/safeconsole.sol#6810-6840) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6817-6831)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6834-6840)
safeconsole.log(bool,uint256,uint256,bool) (lib/forge-std/src/safeconsole.sol#6840-6870) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6846-6860)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6864-6870)
safeconsole.log(bool,uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#6870-6893) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6874-6884)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6887-6892)
safeconsole.log(bool,uint256,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#6893-6944) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6904-6931)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6935-6943)
safeconsole.log(bool,uint256,bytes32,address) (lib/forge-std/src/safeconsole.sol#6944-6991) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6951-6980)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6983-6991)
safeconsole.log(bool,uint256,bytes32,bool) (lib/forge-std/src/safeconsole.sol#6991-7034) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7002-7024)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7027-7034)
safeconsole.log(bool,uint256,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#7035-7085) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7045-7073)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7077-7084)
safeconsole.log(bool,uint256,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#7085-7141) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7094-7125)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7129-7140)
safeconsole.log(bool,bytes32,address,address) (lib/forge-std/src/safeconsole.sol#7141-7183) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7147-7171)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7174-7183)
safeconsole.log(bool,bytes32,address,bool) (lib/forge-std/src/safeconsole.sol#7184-7226) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7192-7215)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7217-7226)
safeconsole.log(bool,bytes32,address,uint256) (lib/forge-std/src/safeconsole.sol#7226-7270) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7236-7258)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7261-7270)
safeconsole.log(bool,bytes32,address,bytes32) (lib/forge-std/src/safeconsole.sol#7270-7321) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7281-7306)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7309-7321)
safeconsole.log(bool,bytes32,bool,address) (lib/forge-std/src/safeconsole.sol#7322-7362) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7329-7352)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7355-7362)
safeconsole.log(bool,bytes32,bool,bool) (lib/forge-std/src/safeconsole.sol#7363-7405) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7374-7395)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7398-7405)
safeconsole.log(bool,bytes32,bool,uint256) (lib/forge-std/src/safeconsole.sol#7406-7449) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7416-7438)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7441-7449)
safeconsole.log(bool,bytes32,bool,bytes32) (lib/forge-std/src/safeconsole.sol#7449-7499) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7461-7486)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7489-7499)
safeconsole.log(bool,bytes32,uint256,address) (lib/forge-std/src/safeconsole.sol#7500-7543) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7511-7532)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7535-7542)
safeconsole.log(bool,bytes32,uint256,bool) (lib/forge-std/src/safeconsole.sol#7543-7586) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7554-7577)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7579-7586)
safeconsole.log(bool,bytes32,uint256,uint256) (lib/forge-std/src/safeconsole.sol#7586-7630) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7595-7621)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7623-7630)
safeconsole.log(bool,bytes32,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#7631-7680) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7640-7668)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7671-7680)
safeconsole.log(bool,bytes32,bytes32,address) (lib/forge-std/src/safeconsole.sol#7680-7731) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7692-7718)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7721-7730)
safeconsole.log(bool,bytes32,bytes32,bool) (lib/forge-std/src/safeconsole.sol#7731-7780) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7742-7768)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7771-7780)
safeconsole.log(bool,bytes32,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#7781-7831) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7794-7818)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7821-7831)
safeconsole.log(bool,bytes32,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#7832-7890) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7843-7873)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7877-7890)
safeconsole.log(uint256,address,address,address) (lib/forge-std/src/safeconsole.sol#7890-7913) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7893-7905)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7908-7913)
safeconsole.log(uint256,address,address,bool) (lib/forge-std/src/safeconsole.sol#7914-7942) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7921-7937)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7940-7942)
safeconsole.log(uint256,address,address,uint256) (lib/forge-std/src/safeconsole.sol#7943-7968) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7948-7960)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7962-7968)
safeconsole.log(uint256,address,address,bytes32) (lib/forge-std/src/safeconsole.sol#7968-8012) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7980-8003)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8006-8012)
safeconsole.log(uint256,address,bool,address) (lib/forge-std/src/safeconsole.sol#8013-8044) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8020-8034)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8038-8044)
safeconsole.log(uint256,address,bool,bool) (lib/forge-std/src/safeconsole.sol#8044-8067) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8048-8060)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8061-8067)
safeconsole.log(uint256,address,bool,uint256) (lib/forge-std/src/safeconsole.sol#8067-8099) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8074-8090)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8094-8099)
safeconsole.log(uint256,address,bool,bytes32) (lib/forge-std/src/safeconsole.sol#8099-8140) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8103-8129)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8132-8140)
safeconsole.log(uint256,address,uint256,address) (lib/forge-std/src/safeconsole.sol#8141-8170) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8149-8161)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8164-8170)
safeconsole.log(uint256,address,uint256,bool) (lib/forge-std/src/safeconsole.sol#8170-8200) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8180-8191)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8194-8200)
safeconsole.log(uint256,address,uint256,uint256) (lib/forge-std/src/safeconsole.sol#8200-8230) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8209-8221)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8224-8229)
safeconsole.log(uint256,address,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#8230-8273) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8241-8263)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8265-8273)
safeconsole.log(uint256,address,bytes32,address) (lib/forge-std/src/safeconsole.sol#8273-8324) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8284-8312)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8316-8323)
safeconsole.log(uint256,address,bytes32,bool) (lib/forge-std/src/safeconsole.sol#8324-8371) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8332-8360)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8363-8371)
safeconsole.log(uint256,address,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#8372-8414) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8382-8404)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8407-8414)
safeconsole.log(uint256,address,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#8415-8470) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8427-8459)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8462-8470)
safeconsole.log(uint256,bool,address,address) (lib/forge-std/src/safeconsole.sol#8470-8499) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8478-8492)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8494-8499)
safeconsole.log(uint256,bool,address,bool) (lib/forge-std/src/safeconsole.sol#8500-8527) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8507-8522)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8524-8527)
safeconsole.log(uint256,bool,address,uint256) (lib/forge-std/src/safeconsole.sol#8527-8554) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8534-8545)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8548-8554)
safeconsole.log(uint256,bool,address,bytes32) (lib/forge-std/src/safeconsole.sol#8555-8597) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8565-8586)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8590-8597)
safeconsole.log(uint256,bool,bool,address) (lib/forge-std/src/safeconsole.sol#8597-8624) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8607-8616)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8618-8623)
safeconsole.log(uint256,bool,bool,bool) (lib/forge-std/src/safeconsole.sol#8624-8653) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8630-8642)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8647-8653)
safeconsole.log(uint256,bool,bool,uint256) (lib/forge-std/src/safeconsole.sol#8654-8676) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8659-8669)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8671-8676)
safeconsole.log(uint256,bool,bool,bytes32) (lib/forge-std/src/safeconsole.sol#8676-8720) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8685-8711)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8714-8720)
safeconsole.log(uint256,bool,uint256,address) (lib/forge-std/src/safeconsole.sol#8720-8750) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8727-8740)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8744-8750)
safeconsole.log(uint256,bool,uint256,bool) (lib/forge-std/src/safeconsole.sol#8750-8780) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8757-8770)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8775-8780)
safeconsole.log(uint256,bool,uint256,uint256) (lib/forge-std/src/safeconsole.sol#8781-8810) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8788-8800)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8803-8810)
safeconsole.log(uint256,bool,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#8810-8854) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8819-8848)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8849-8854)
safeconsole.log(uint256,bool,bytes32,address) (lib/forge-std/src/safeconsole.sol#8854-8901) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8862-8892)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8894-8901)
safeconsole.log(uint256,bool,bytes32,bool) (lib/forge-std/src/safeconsole.sol#8902-8952) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8911-8939)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8944-8951)
safeconsole.log(uint256,bool,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#8952-8995) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8959-8987)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8989-8995)
safeconsole.log(uint256,bool,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#8996-9051) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9004-9036)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9040-9051)
safeconsole.log(uint256,uint256,address,address) (lib/forge-std/src/safeconsole.sol#9051-9081) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9059-9071)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9073-9080)
safeconsole.log(uint256,uint256,address,bool) (lib/forge-std/src/safeconsole.sol#9082-9109) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9089-9100)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9103-9109)
safeconsole.log(uint256,uint256,address,uint256) (lib/forge-std/src/safeconsole.sol#9109-9136) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9119-9128)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9130-9136)
safeconsole.log(uint256,uint256,address,bytes32) (lib/forge-std/src/safeconsole.sol#9136-9180) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9143-9171)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9173-9180)
safeconsole.log(uint256,uint256,bool,address) (lib/forge-std/src/safeconsole.sol#9180-9210) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9186-9199)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9203-9210)
safeconsole.log(uint256,uint256,bool,bool) (lib/forge-std/src/safeconsole.sol#9211-9233) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9215-9225)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9227-9232)
safeconsole.log(uint256,uint256,bool,uint256) (lib/forge-std/src/safeconsole.sol#9233-9261) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9240-9256)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9259-9261)
safeconsole.log(uint256,uint256,bool,bytes32) (lib/forge-std/src/safeconsole.sol#9261-9307) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9269-9297)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9301-9307)
safeconsole.log(uint256,uint256,uint256,address) (lib/forge-std/src/safeconsole.sol#9307-9331) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9312-9323)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9326-9331)
safeconsole.log(uint256,uint256,uint256,bool) (lib/forge-std/src/safeconsole.sol#9331-9361) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9339-9354)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9357-9361)
safeconsole.log(uint256,uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#9361-9391) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9369-9384)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9387-9391)
safeconsole.log(uint256,uint256,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#9391-9441) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9400-9428)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9432-9440)
safeconsole.log(uint256,uint256,bytes32,address) (lib/forge-std/src/safeconsole.sol#9441-9484) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9450-9472)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9475-9483)
safeconsole.log(uint256,uint256,bytes32,bool) (lib/forge-std/src/safeconsole.sol#9484-9532) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9494-9523)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9525-9532)
safeconsole.log(uint256,uint256,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#9532-9583) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9541-9570)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9573-9583)
safeconsole.log(uint256,uint256,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#9583-9632) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9590-9619)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9622-9632)
safeconsole.log(uint256,bytes32,address,address) (lib/forge-std/src/safeconsole.sol#9633-9680) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9641-9669)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9672-9679)
safeconsole.log(uint256,bytes32,address,bool) (lib/forge-std/src/safeconsole.sol#9680-9727) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9691-9719)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9722-9727)
safeconsole.log(uint256,bytes32,address,uint256) (lib/forge-std/src/safeconsole.sol#9727-9771) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9734-9762)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9766-9771)
safeconsole.log(uint256,bytes32,address,bytes32) (lib/forge-std/src/safeconsole.sol#9771-9819) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9779-9811)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9814-9819)
safeconsole.log(uint256,bytes32,bool,address) (lib/forge-std/src/safeconsole.sol#9819-9863) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9828-9857)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9859-9863)
safeconsole.log(uint256,bytes32,bool,bool) (lib/forge-std/src/safeconsole.sol#9863-9908) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9871-9899)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9903-9908)
safeconsole.log(uint256,bytes32,bool,uint256) (lib/forge-std/src/safeconsole.sol#9908-9954) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9915-9941)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9946-9954)
safeconsole.log(uint256,bytes32,bool,bytes32) (lib/forge-std/src/safeconsole.sol#9954-10003) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9960-9991)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9993-10003)
safeconsole.log(uint256,bytes32,uint256,address) (lib/forge-std/src/safeconsole.sol#10003-10047) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10008-10036)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10038-10047)
safeconsole.log(uint256,bytes32,uint256,bool) (lib/forge-std/src/safeconsole.sol#10047-10091) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10051-10078)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10081-10091)
safeconsole.log(uint256,bytes32,uint256,uint256) (lib/forge-std/src/safeconsole.sol#10091-10133) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10097-10121)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10124-10133)
safeconsole.log(uint256,bytes32,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#10133-10185) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10144-10169)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10172-10184)
safeconsole.log(uint256,bytes32,bytes32,address) (lib/forge-std/src/safeconsole.sol#10185-10235) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10192-10221)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10224-10234)
safeconsole.log(uint256,bytes32,bytes32,bool) (lib/forge-std/src/safeconsole.sol#10235-10283) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10240-10272)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10276-10282)
safeconsole.log(uint256,bytes32,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#10283-10332) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10291-10321)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10326-10332)
safeconsole.log(uint256,bytes32,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#10333-10387) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10342-10377)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10378-10387)
safeconsole.log(bytes32,address,address,address) (lib/forge-std/src/safeconsole.sol#10387-10431) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10395-10422)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10424-10431)
safeconsole.log(bytes32,address,address,bool) (lib/forge-std/src/safeconsole.sol#10431-10475) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10438-10469)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10469-10475)
safeconsole.log(bytes32,address,address,uint256) (lib/forge-std/src/safeconsole.sol#10475-10521) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10483-10512)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10516-10521)
safeconsole.log(bytes32,address,address,bytes32) (lib/forge-std/src/safeconsole.sol#10521-10573) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10529-10559)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10563-10573)
safeconsole.log(bytes32,address,bool,address) (lib/forge-std/src/safeconsole.sol#10573-10617) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10578-10604)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10607-10616)
safeconsole.log(bytes32,address,bool,bool) (lib/forge-std/src/safeconsole.sol#10617-10658) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10625-10648)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10650-10658)
safeconsole.log(bytes32,address,bool,uint256) (lib/forge-std/src/safeconsole.sol#10658-10702) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10669-10693)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10695-10702)
safeconsole.log(bytes32,address,bool,bytes32) (lib/forge-std/src/safeconsole.sol#10702-10751) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10712-10740)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10743-10751)
safeconsole.log(bytes32,address,uint256,address) (lib/forge-std/src/safeconsole.sol#10751-10795) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10760-10786)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10789-10795)
safeconsole.log(bytes32,address,uint256,bool) (lib/forge-std/src/safeconsole.sol#10795-10838) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10804-10829)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10832-10838)
safeconsole.log(bytes32,address,uint256,uint256) (lib/forge-std/src/safeconsole.sol#10838-10884) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10847-10874)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10876-10884)
safeconsole.log(bytes32,address,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#10884-10933) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10892-10923)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10924-10933)
safeconsole.log(bytes32,address,bytes32,address) (lib/forge-std/src/safeconsole.sol#10933-10983) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10942-10972)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10974-10982)
safeconsole.log(bytes32,address,bytes32,bool) (lib/forge-std/src/safeconsole.sol#10983-11032) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10993-11022)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11023-11032)
safeconsole.log(bytes32,address,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#11033-11083) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11044-11072)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11074-11083)
safeconsole.log(bytes32,address,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#11083-11141) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11096-11125)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11128-11141)
safeconsole.log(bytes32,bool,address,address) (lib/forge-std/src/safeconsole.sol#11141-11186) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11151-11173)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11176-11186)
safeconsole.log(bytes32,bool,address,bool) (lib/forge-std/src/safeconsole.sol#11186-11227) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11195-11216)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11219-11226)
safeconsole.log(bytes32,bool,address,uint256) (lib/forge-std/src/safeconsole.sol#11227-11270) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11238-11260)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11263-11270)
safeconsole.log(bytes32,bool,address,bytes32) (lib/forge-std/src/safeconsole.sol#11270-11320) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11283-11309)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11311-11320)
safeconsole.log(bytes32,bool,bool,address) (lib/forge-std/src/safeconsole.sol#11320-11364) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11329-11355)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11358-11364)
safeconsole.log(bytes32,bool,bool,bool) (lib/forge-std/src/safeconsole.sol#11364-11409) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11373-11401)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11403-11409)
safeconsole.log(bytes32,bool,bool,uint256) (lib/forge-std/src/safeconsole.sol#11409-11455) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11416-11446)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11450-11455)
safeconsole.log(bytes32,bool,bool,bytes32) (lib/forge-std/src/safeconsole.sol#11455-11506) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11463-11492)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11494-11506)
safeconsole.log(bytes32,bool,uint256,address) (lib/forge-std/src/safeconsole.sol#11507-11550) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11512-11537)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11541-11550)
safeconsole.log(bytes32,bool,uint256,bool) (lib/forge-std/src/safeconsole.sol#11551-11593) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11556-11580)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11583-11593)
safeconsole.log(bytes32,bool,uint256,uint256) (lib/forge-std/src/safeconsole.sol#11593-11636) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11600-11624)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11627-11636)
safeconsole.log(bytes32,bool,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#11636-11686) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11647-11672)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11675-11685)
safeconsole.log(bytes32,bool,bytes32,address) (lib/forge-std/src/safeconsole.sol#11686-11738) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11697-11722)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11725-11738)
safeconsole.log(bytes32,bool,bytes32,bool) (lib/forge-std/src/safeconsole.sol#11738-11787) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11744-11775)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11777-11787)
safeconsole.log(bytes32,bool,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#11787-11835) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11793-11825)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11829-11835)
safeconsole.log(bytes32,bool,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#11836-11890) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11845-11880)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11883-11890)
safeconsole.log(bytes32,uint256,address,address) (lib/forge-std/src/safeconsole.sol#11890-11934) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11898-11928)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11929-11934)
safeconsole.log(bytes32,uint256,address,bool) (lib/forge-std/src/safeconsole.sol#11934-11977) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11942-11972)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11974-11977)
safeconsole.log(bytes32,uint256,address,uint256) (lib/forge-std/src/safeconsole.sol#11977-12023) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11986-12017)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12019-12023)
safeconsole.log(bytes32,uint256,address,bytes32) (lib/forge-std/src/safeconsole.sol#12023-12074) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12032-12064)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12068-12074)
safeconsole.log(bytes32,uint256,bool,address) (lib/forge-std/src/safeconsole.sol#12074-12121) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12081-12107)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12111-12121)
safeconsole.log(bytes32,uint256,bool,bool) (lib/forge-std/src/safeconsole.sol#12121-12163) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12127-12151)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12154-12163)
safeconsole.log(bytes32,uint256,bool,uint256) (lib/forge-std/src/safeconsole.sol#12163-12205) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12174-12195)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12198-12205)
safeconsole.log(bytes32,uint256,bool,bytes32) (lib/forge-std/src/safeconsole.sol#12206-12256) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12217-12245)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12247-12255)
safeconsole.log(bytes32,uint256,uint256,address) (lib/forge-std/src/safeconsole.sol#12257-12299) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12265-12290)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12293-12299)
safeconsole.log(bytes32,uint256,uint256,bool) (lib/forge-std/src/safeconsole.sol#12299-12343) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12308-12334)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12337-12343)
safeconsole.log(bytes32,uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#12343-12388) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12352-12378)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12380-12388)
safeconsole.log(bytes32,uint256,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#12388-12437) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12397-12426)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12429-12437)
safeconsole.log(bytes32,uint256,bytes32,address) (lib/forge-std/src/safeconsole.sol#12437-12487) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12447-12476)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12479-12487)
safeconsole.log(bytes32,uint256,bytes32,bool) (lib/forge-std/src/safeconsole.sol#12487-12537) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12497-12526)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12529-12537)
safeconsole.log(bytes32,uint256,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#12538-12587) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12547-12575)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12578-12587)
safeconsole.log(bytes32,uint256,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#12587-12644) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12601-12630)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12633-12644)
safeconsole.log(bytes32,bytes32,address,address) (lib/forge-std/src/safeconsole.sol#12645-12696) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12657-12682)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12685-12696)
safeconsole.log(bytes32,bytes32,address,bool) (lib/forge-std/src/safeconsole.sol#12696-12747) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12705-12732)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12736-12747)
safeconsole.log(bytes32,bytes32,address,uint256) (lib/forge-std/src/safeconsole.sol#12747-12797) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12753-12783)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12786-12797)
safeconsole.log(bytes32,bytes32,address,bytes32) (lib/forge-std/src/safeconsole.sol#12797-12851) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12804-12838)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12843-12851)
safeconsole.log(bytes32,bytes32,bool,address) (lib/forge-std/src/safeconsole.sol#12851-12902) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12860-12891)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12895-12901)
safeconsole.log(bytes32,bytes32,bool,bool) (lib/forge-std/src/safeconsole.sol#12902-12953) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12910-12940)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12944-12953)
safeconsole.log(bytes32,bytes32,bool,uint256) (lib/forge-std/src/safeconsole.sol#12953-13005) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12960-12991)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12993-13005)
safeconsole.log(bytes32,bytes32,bool,bytes32) (lib/forge-std/src/safeconsole.sol#13005-13062) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13012-13044)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13048-13062)
safeconsole.log(bytes32,bytes32,uint256,address) (lib/forge-std/src/safeconsole.sol#13062-13112) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13067-13096)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13102-13112)
safeconsole.log(bytes32,bytes32,uint256,bool) (lib/forge-std/src/safeconsole.sol#13112-13162) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13118-13147)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13150-13162)
safeconsole.log(bytes32,bytes32,uint256,uint256) (lib/forge-std/src/safeconsole.sol#13162-13211) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13169-13197)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13200-13211)
safeconsole.log(bytes32,bytes32,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#13212-13268) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13222-13252)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13255-13267)
safeconsole.log(bytes32,bytes32,bytes32,address) (lib/forge-std/src/safeconsole.sol#13268-13327) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13279-13309)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13312-13327)
safeconsole.log(bytes32,bytes32,bytes32,bool) (lib/forge-std/src/safeconsole.sol#13327-13383) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13334-13368)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13370-13383)
safeconsole.log(bytes32,bytes32,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#13383-13438) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13391-13425)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13429-13438)
safeconsole.log(bytes32,bytes32,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#13439-13500) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13450-13488)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13492-13500)
safeconsole.log.asm_0.writeString() (lib/forge-std/src/safeconsole.sol#13450-13460) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13450-13460)
ERC721Utils.checkOnERC721Received(address,address,address,uint256,bytes) (lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol#23-46) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol#42-44)
Panic.panic(uint256) (lib/openzeppelin-contracts/contracts/utils/Panic.sol#49-53) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Panic.sol#50-53)
Strings.toString(uint256) (lib/openzeppelin-contracts/contracts/utils/Strings.sol#43-59) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Strings.sol#48-51)
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Strings.sol#53-56)
Strings.toChecksumHexString(address) (lib/openzeppelin-contracts/contracts/utils/Strings.sol#108-124) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Strings.sol#112-115)
Strings.escapeJSON(string) (lib/openzeppelin-contracts/contracts/utils/Strings.sol#440-462) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Strings.sol#459-461)
Strings._unsafeReadBytesOffset(bytes,uint256) (lib/openzeppelin-contracts/contracts/utils/Strings.sol#470-481) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Strings.sol#479-481)
Math.add512(uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#23-28) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#25-28)
Math.mul512(uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#35-44) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#40-44)
Math.tryMul(uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#71-81) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#73-78)
Math.tryDiv(uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#87-93) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#89-93)
Math.tryMod(uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#100-106) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#102-106)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#222-229)
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#236-244)
Math.tryModExp(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#404-423) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#405-422)
Math.tryModExp(bytes,bytes,bytes) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#436-462) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#447-462)
Math.log2(uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#592-640) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#638-640)
SafeCast.toUint(bool) (lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol#1120-1124) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol#1122-1123)
FractionalizedNFT.rageQuit() (src/FractionalizedNFT.sol#227-259) uses assembly
        - INLINE ASM (src/FractionalizedNFT.sol#244-245)
Governance.vote(uint256) (src/Governance.sol#50-65) uses assembly
        - INLINE ASM (src/Governance.sol#64-65)
Governance.uselessYul() (src/Governance.sol#109-115) uses assembly
        - INLINE ASM (src/Governance.sol#111-115)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
StdCheatsSafe.assumeNotBlacklisted(address,address) (lib/forge-std/src/StdCheats.sol#200-224) compares to a boolean constant:
        -vm.assume(! success || abi.decode(returnData,(bool)) == false) (lib/forge-std/src/StdCheats.sol#217-220)
StdCheatsSafe.assumeNotBlacklisted(address,address) (lib/forge-std/src/StdCheats.sol#200-224) compares to a boolean constant:
        -vm.assume(! success || abi.decode(returnData,(bool)) == false) (lib/forge-std/src/StdCheats.sol#222-224)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
4 different versions of Solidity are used:
        - Version constraint >=0.6.2<0.9.0 is used by:
                ->=0.6.2<0.9.0 (lib/forge-std/src/Base.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/Script.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/StdChains.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/StdCheats.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/StdConstants.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/StdMath.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/StdStorage.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/StdUtils.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/Vm.sol#3-4)
                ->=0.6.2<0.9.0 (lib/forge-std/src/interfaces/IMulticall3.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/safeconsole.sol#1-2)
        - Version constraint >=0.6.0<0.9.0 is used by:
                ->=0.6.0<0.9.0 (lib/forge-std/src/StdJson.sol#1-2)
        - Version constraint >=0.4.22<0.9.0 is used by:
                ->=0.4.22<0.9.0 (lib/forge-std/src/StdStyle.sol#1-2)
                ->=0.4.22<0.9.0 (lib/forge-std/src/console.sol#1-2)
                ->=0.4.22<0.9.0 (lib/forge-std/src/console2.sol#1-2)
        - Version constraint ^0.8.20 is used by:
                -^0.8.20 (lib/openzeppelin-contracts/contracts/access/Ownable.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol#2-3)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Context.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Panic.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Strings.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol#3-5)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol#2-4)
                -^0.8.20 (src/Deploy.s.sol#1-2)
                -^0.8.20 (src/FractionalizedNFT.sol#1-2)
                -^0.8.20 (src/Governance.sol#1-2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Version constraint >=0.6.2<0.9.0 is too complex.
It is used by:
        - >=0.6.2<0.9.0 (lib/forge-std/src/Base.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/Script.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/StdChains.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/StdCheats.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/StdConstants.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/StdMath.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/StdStorage.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/StdUtils.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/Vm.sol#3-4)
        - >=0.6.2<0.9.0 (lib/forge-std/src/interfaces/IMulticall3.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/safeconsole.sol#1-2)
Version constraint >=0.6.0<0.9.0 is too complex.
It is used by:
        - >=0.6.0<0.9.0 (lib/forge-std/src/StdJson.sol#1-2)
Version constraint >=0.4.22<0.9.0 is too complex.
It is used by:
        - >=0.4.22<0.9.0 (lib/forge-std/src/StdStyle.sol#1-2)
        - >=0.4.22<0.9.0 (lib/forge-std/src/console.sol#1-2)
        - >=0.4.22<0.9.0 (lib/forge-std/src/console2.sol#1-2)
Version constraint ^0.8.20 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
        - VerbatimInvalidDeduplication
        - FullInlinerNonExpressionSplitArgumentEvaluationOrder
        - MissingSideEffectsOnSelectorAccess.
It is used by:
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/access/Ownable.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol#2-3)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Context.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Panic.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Strings.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol#3-5)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol#2-4)
        - ^0.8.20 (src/Deploy.s.sol#1-2)
        - ^0.8.20 (src/FractionalizedNFT.sol#1-2)
        - ^0.8.20 (src/Governance.sol#1-2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in StdCheatsSafe.assumeNotBlacklisted(address,address) (lib/forge-std/src/StdCheats.sol#200-224):
        - (success,returnData) = token.staticcall(abi.encodeWithSelector(0xfe575a87,addr)) (lib/forge-std/src/StdCheats.sol#215-217)
        - (success,returnData) = token.staticcall(abi.encodeWithSelector(0xe47d6060,addr)) (lib/forge-std/src/StdCheats.sol#221-222)
Low level call in StdCheatsSafe._isPayable(address) (lib/forge-std/src/StdCheats.sol#280-290):
        - (success,None) = address(addr).call{value: 1}() (lib/forge-std/src/StdCheats.sol#286-287)
Low level call in StdCheats.deal(address,address,uint256,bool) (lib/forge-std/src/StdCheats.sol#719-741):
        - (None,balData) = token.staticcall(abi.encodeWithSelector(0x70a08231,to)) (lib/forge-std/src/StdCheats.sol#724-728)
        - (None,totSupData) = token.staticcall(abi.encodeWithSelector(0x18160ddd)) (lib/forge-std/src/StdCheats.sol#731-735)
Low level call in StdCheats.dealERC1155(address,address,uint256,uint256,bool) (lib/forge-std/src/StdCheats.sol#741-766):
        - (None,balData) = token.staticcall(abi.encodeWithSelector(0x00fdd58e,to,id)) (lib/forge-std/src/StdCheats.sol#743-746)
        - (None,totSupData) = token.staticcall(abi.encodeWithSelector(0xbd85b039,id)) (lib/forge-std/src/StdCheats.sol#751-753)
Low level call in StdCheats.dealERC721(address,address,uint256) (lib/forge-std/src/StdCheats.sol#766-789):
        - (successMinted,ownerData) = token.staticcall(abi.encodeWithSelector(0x6352211e,id)) (lib/forge-std/src/StdCheats.sol#770-771)
        - (None,fromBalData) = token.staticcall(abi.encodeWithSelector(0x70a08231,abi.decode(ownerData,(address)))) (lib/forge-std/src/StdCheats.sol#774-777)
        - (None,toBalData) = token.staticcall(abi.encodeWithSelector(0x70a08231,to)) (lib/forge-std/src/StdCheats.sol#780-782)
Low level call in StdCheats.deployCodeTo(string,bytes,uint256,address) (lib/forge-std/src/StdCheats.sol#796-805):
        - (success,runtimeBytecode) = where.call{value: value}() (lib/forge-std/src/StdCheats.sol#801)
Low level call in StdCheats.console2_log_StdCheats(string) (lib/forge-std/src/StdCheats.sol#808-813):
        - (status,None) = address(CONSOLE2_ADDRESS).staticcall(abi.encodeWithSignature(log(string),p0)) (lib/forge-std/src/StdCheats.sol#812-813)
Low level call in stdStorageSafe.callTarget(StdStorage) (lib/forge-std/src/StdStorage.sol#43-47):
        - (success,rdat) = self._target.staticcall(cald) (lib/forge-std/src/StdStorage.sol#45-46)
Low level call in Governance.executeProposal(uint256) (src/Governance.sol#93-103):
        - (success,None) = address(this).call(p.callData) (src/Governance.sol#100-101)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Constant CommonBase.vm (lib/forge-std/src/Base.sol#32-34) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ScriptBase.vmSafe (lib/forge-std/src/Base.sol#40-41) is not in UPPER_CASE_WITH_UNDERSCORES
Variable Script.IS_SCRIPT (lib/forge-std/src/Script.sol#26-27) is not in mixedCase
Constant StdChains.vm (lib/forge-std/src/StdChains.sol#34-35) is not in UPPER_CASE_WITH_UNDERSCORES
Constant StdCheatsSafe.vm (lib/forge-std/src/StdCheats.sol#10-11) is not in UPPER_CASE_WITH_UNDERSCORES
Function StdCheats.console2_log_StdCheats(string) (lib/forge-std/src/StdCheats.sol#808-813) is not in mixedCase
Constant StdCheats.vm (lib/forge-std/src/StdCheats.sol#632-637) is not in UPPER_CASE_WITH_UNDERSCORES
Contract stdJson (lib/forge-std/src/StdJson.sol#22-274) is not in CapWords
Constant stdJson.vm (lib/forge-std/src/StdJson.sol#24-26) is not in UPPER_CASE_WITH_UNDERSCORES
Contract stdMath (lib/forge-std/src/StdMath.sol#2-41) is not in CapWords
Contract stdStorageSafe (lib/forge-std/src/StdStorage.sol#21-324) is not in CapWords
Event stdStorageSafe.WARNING_UninitedSlot(address,uint256) (lib/forge-std/src/StdStorage.sol#25-26) is not in CapWords
Parameter stdStorageSafe.find(StdStorage,bool)._clear (lib/forge-std/src/StdStorage.sol#105) is not in mixedCase
Parameter stdStorageSafe.target(StdStorage,address)._target (lib/forge-std/src/StdStorage.sol#166) is not in mixedCase
Parameter stdStorageSafe.sig(StdStorage,bytes4)._sig (lib/forge-std/src/StdStorage.sol#171) is not in mixedCase
Parameter stdStorageSafe.sig(StdStorage,string)._sig (lib/forge-std/src/StdStorage.sol#176) is not in mixedCase
Function stdStorageSafe.with_calldata(StdStorage,bytes) (lib/forge-std/src/StdStorage.sol#178-184) is not in mixedCase
Parameter stdStorageSafe.with_calldata(StdStorage,bytes)._calldata (lib/forge-std/src/StdStorage.sol#181) is not in mixedCase
Function stdStorageSafe.with_key(StdStorage,address) (lib/forge-std/src/StdStorage.sol#185-189) is not in mixedCase
Function stdStorageSafe.with_key(StdStorage,uint256) (lib/forge-std/src/StdStorage.sol#190-193) is not in mixedCase
Function stdStorageSafe.with_key(StdStorage,bytes32) (lib/forge-std/src/StdStorage.sol#193-197) is not in mixedCase
Function stdStorageSafe.enable_packed_slots(StdStorage) (lib/forge-std/src/StdStorage.sol#197-202) is not in mixedCase
Parameter stdStorageSafe.depth(StdStorage,uint256)._depth (lib/forge-std/src/StdStorage.sol#206) is not in mixedCase
Function stdStorageSafe.read_bytes32(StdStorage) (lib/forge-std/src/StdStorage.sol#218-219) is not in mixedCase
Function stdStorageSafe.read_bool(StdStorage) (lib/forge-std/src/StdStorage.sol#219-228) is not in mixedCase
Function stdStorageSafe.read_address(StdStorage) (lib/forge-std/src/StdStorage.sol#228-232) is not in mixedCase
Function stdStorageSafe.read_uint(StdStorage) (lib/forge-std/src/StdStorage.sol#232-235) is not in mixedCase
Function stdStorageSafe.read_int(StdStorage) (lib/forge-std/src/StdStorage.sol#235-239) is not in mixedCase
Constant stdStorageSafe.vm (lib/forge-std/src/StdStorage.sol#26-28) is not in UPPER_CASE_WITH_UNDERSCORES
Contract stdStorage (lib/forge-std/src/StdStorage.sol#324-458) is not in CapWords
Parameter stdStorage.find(StdStorage,bool)._clear (lib/forge-std/src/StdStorage.sol#335) is not in mixedCase
Parameter stdStorage.target(StdStorage,address)._target (lib/forge-std/src/StdStorage.sol#338) is not in mixedCase
Parameter stdStorage.sig(StdStorage,bytes4)._sig (lib/forge-std/src/StdStorage.sol#345) is not in mixedCase
Parameter stdStorage.sig(StdStorage,string)._sig (lib/forge-std/src/StdStorage.sol#349) is not in mixedCase
Function stdStorage.with_key(StdStorage,address) (lib/forge-std/src/StdStorage.sol#350-354) is not in mixedCase
Function stdStorage.with_key(StdStorage,uint256) (lib/forge-std/src/StdStorage.sol#354-358) is not in mixedCase
Function stdStorage.with_key(StdStorage,bytes32) (lib/forge-std/src/StdStorage.sol#358-362) is not in mixedCase
Function stdStorage.with_calldata(StdStorage,bytes) (lib/forge-std/src/StdStorage.sol#362-366) is not in mixedCase
Parameter stdStorage.with_calldata(StdStorage,bytes)._calldata (lib/forge-std/src/StdStorage.sol#365) is not in mixedCase
Function stdStorage.enable_packed_slots(StdStorage) (lib/forge-std/src/StdStorage.sol#366-370) is not in mixedCase
Parameter stdStorage.depth(StdStorage,uint256)._depth (lib/forge-std/src/StdStorage.sol#373) is not in mixedCase
Function stdStorage.checked_write(StdStorage,address) (lib/forge-std/src/StdStorage.sol#377-381) is not in mixedCase
Function stdStorage.checked_write(StdStorage,uint256) (lib/forge-std/src/StdStorage.sol#381-382) is not in mixedCase
Function stdStorage.checked_write_int(StdStorage,int256) (lib/forge-std/src/StdStorage.sol#382-389) is not in mixedCase
Function stdStorage.checked_write(StdStorage,bool) (lib/forge-std/src/StdStorage.sol#389-394) is not in mixedCase
Function stdStorage.checked_write(StdStorage,bytes32) (lib/forge-std/src/StdStorage.sol#394-433) is not in mixedCase
Function stdStorage.read_bytes32(StdStorage) (lib/forge-std/src/StdStorage.sol#433-435) is not in mixedCase
Function stdStorage.read_bool(StdStorage) (lib/forge-std/src/StdStorage.sol#435-439) is not in mixedCase
Function stdStorage.read_address(StdStorage) (lib/forge-std/src/StdStorage.sol#439-441) is not in mixedCase
Function stdStorage.read_uint(StdStorage) (lib/forge-std/src/StdStorage.sol#442-447) is not in mixedCase
Function stdStorage.read_int(StdStorage) (lib/forge-std/src/StdStorage.sol#447-450) is not in mixedCase
Constant stdStorage.vm (lib/forge-std/src/StdStorage.sol#325) is not in UPPER_CASE_WITH_UNDERSCORES
Constant StdStyle.vm (lib/forge-std/src/StdStyle.sol#6-7) is not in UPPER_CASE_WITH_UNDERSCORES
Function StdUtils.console2_log_StdUtils(string) (lib/forge-std/src/StdUtils.sol#191-194) is not in mixedCase
Function StdUtils.console2_log_StdUtils(string,uint256) (lib/forge-std/src/StdUtils.sol#194-199) is not in mixedCase
Function StdUtils.console2_log_StdUtils(string,string) (lib/forge-std/src/StdUtils.sol#199-203) is not in mixedCase
Constant StdUtils.multicall (lib/forge-std/src/StdUtils.sol#12-14) is not in UPPER_CASE_WITH_UNDERSCORES
Constant StdUtils.vm (lib/forge-std/src/StdUtils.sol#14-15) is not in UPPER_CASE_WITH_UNDERSCORES
Function VmSafe.eth_getLogs(uint256,uint256,address,bytes32[]) (lib/forge-std/src/Vm.sol#599-602) is not in mixedCase
Contract console (lib/forge-std/src/console.sol#2-1528) is not in CapWords
Contract safeconsole (lib/forge-std/src/safeconsole.sol#5-13500) is not in CapWords
Parameter safeconsole.log.asm_0.writeString().pos_log_asm_0_writeString (lib/forge-std/src/safeconsole.sol#13451) is not in mixedCase
Parameter safeconsole.log.asm_0.writeString().w_log_asm_0_writeString (lib/forge-std/src/safeconsole.sol#13451) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "status (lib/forge-std/src/StdCheats.sol#813)" inStdCheats (lib/forge-std/src/StdCheats.sol#631-813)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
safeconsole.slitherConstructorConstantVariables() (lib/forge-std/src/safeconsole.sol#5-13500) uses literals with too many digits:
        - CONSOLE_ADDR = 0x000000000000000000000000000000000000000000636F6e736F6c652e6c6f67 (lib/forge-std/src/safeconsole.sol#6-7)
Math.log2(uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#592-640) uses literals with too many digits:
        - r = r | byte(uint256,uint256)(x >> r,0x0000010102020202030303030303030300000000000000000000000000000000) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#638-640)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
CommonBase.CONSOLE (lib/forge-std/src/Base.sol#12-13) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
CommonBase.CREATE2_FACTORY (lib/forge-std/src/Base.sol#15-16) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
CommonBase.DEFAULT_SENDER (lib/forge-std/src/Base.sol#18-19) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
CommonBase.DEFAULT_TEST_CONTRACT (lib/forge-std/src/Base.sol#22-23) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
CommonBase.MULTICALL3_ADDRESS (lib/forge-std/src/Base.sol#25-26) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
CommonBase.SECP256K1_ORDER (lib/forge-std/src/Base.sol#27-29) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
CommonBase.UINT256_MAX (lib/forge-std/src/Base.sol#29-32) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
CommonBase.stdstore (lib/forge-std/src/Base.sol#34) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
ScriptBase.vmSafe (lib/forge-std/src/Base.sol#40-41) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
Loop condition i < multiSigApprovers.length (src/Governance.sol#105-108) should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length
INFO:Detectors:
Governance.requiredApprovals (src/Governance.sol#11-12) should be constant
Script.IS_SCRIPT (lib/forge-std/src/Script.sol#26-27) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
Governance.token (src/Governance.sol#9-10) should be immutable
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:. analyzed (42 contracts with 100 detectors), 524 result(s) found

anmoo@Amjad MINGW64 ~/Homework5 (main)
$ ^C

anmoo@Amjad MINGW64 ~/Homework5 (main)
$ ^C

anmoo@Amjad MINGW64 ~/Homework5 (main)
$ ^[[200~"/c/Users/anmoo/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0/LocalCache/local-packages/Python311/Scripts/slither" .
bash: /c/Users/anmoo/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0/LocalCache/local-packages/Python311/Scripts/slither: No such file or directory

anmoo@Amjad MINGW64 ~/Homework5 (main)
$ "/c/Users/anmoo/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0/LocalCache/local-packages/Python311/Scripts/slither" .
'forge clean' running (wd: C:\Users\anmoo\Homework5)
'forge config --json' running
'forge build --build-info --skip */test/** */script/** --force' running (wd: C:\Users\anmoo\Homework5)
INFO:Detectors:
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) has bitwise-xor operator ^ instead of the exponentiation operator **:
         - inverse = (3 * denominator) ^ 2 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#254)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-exponentiation
INFO:Detectors:
stdStorageSafe.getMaskByOffsets(uint256,uint256) (lib/forge-std/src/StdStorage.sol#308-316) contains an incorrect shift operation: mask = 1 << 256 - offsetRight + offsetLeft - 1 << offsetRight (lib/forge-std/src/StdStorage.sol#315-316)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-shift-in-assembly
INFO:Detectors:
StdCheats.vm (lib/forge-std/src/StdCheats.sol#632-637) shadows:
        - StdCheatsSafe.vm (lib/forge-std/src/StdCheats.sol#10-11)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing
INFO:Detectors:
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) performs a multiplication on the result of a division:
        - denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#237)
        - inverse = (3 * denominator) ^ 2 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#254)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) performs a multiplication on the result of a division:
        - denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#237)
        - inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#257)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) performs a multiplication on the result of a division:
        - denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#237)
        - inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#259)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) performs a multiplication on the result of a division:
        - denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#237)
        - inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#259-260)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) performs a multiplication on the result of a division:
        - denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#237)
        - inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#260-261)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) performs a multiplication on the result of a division:
        - denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#237)
        - inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#261-262)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) performs a multiplication on the result of a division:
        - denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#237)
        - inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#262-263)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) performs a multiplication on the result of a division:
        - low = low / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#239)
        - result = low * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#269)
Math.invMod(uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#308-352) performs a multiplication on the result of a division:
        - quotient = gcd / remainder (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#326-327)
        - (gcd,remainder) = (remainder,gcd - remainder * quotient) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#327-340)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Reentrancy in GovernanceDAO.castVote(uint256,bool,uint256) (src/GovernanceDAO.sol#138-159):
        External calls:
        - governanceToken.castVote(proposalId,tokenId) (src/GovernanceDAO.sol#147-148)
        State variables written after the call(s):
        - proposal.forVotes = proposal.forVotes + votes (src/GovernanceDAO.sol#153)
        GovernanceDAO.proposals (src/GovernanceDAO.sol#52-53) can be used in cross function reentrancies:
        - GovernanceDAO.cancel(uint256) (src/GovernanceDAO.sol#175-194)
        - GovernanceDAO.castVote(uint256,bool,uint256) (src/GovernanceDAO.sol#138-159)
        - GovernanceDAO.execute(uint256) (src/GovernanceDAO.sol#164-172)
        - GovernanceDAO.getProposal(uint256) (src/GovernanceDAO.sol#221-239)
        - GovernanceDAO.hasVoted(uint256,address) (src/GovernanceDAO.sol#245-252)
        - GovernanceDAO.proposals (src/GovernanceDAO.sol#52-53)
        - GovernanceDAO.propose(uint256,string) (src/GovernanceDAO.sol#109-127)
        - GovernanceDAO.state(uint256) (src/GovernanceDAO.sol#198-218)
        - proposal.againstVotes = proposal.againstVotes + votes (src/GovernanceDAO.sol#154-156)
        GovernanceDAO.proposals (src/GovernanceDAO.sol#52-53) can be used in cross function reentrancies:
        - GovernanceDAO.cancel(uint256) (src/GovernanceDAO.sol#175-194)
        - GovernanceDAO.castVote(uint256,bool,uint256) (src/GovernanceDAO.sol#138-159)
        - GovernanceDAO.execute(uint256) (src/GovernanceDAO.sol#164-172)
        - GovernanceDAO.getProposal(uint256) (src/GovernanceDAO.sol#221-239)
        - GovernanceDAO.hasVoted(uint256,address) (src/GovernanceDAO.sol#245-252)
        - GovernanceDAO.proposals (src/GovernanceDAO.sol#52-53)
        - GovernanceDAO.propose(uint256,string) (src/GovernanceDAO.sol#109-127)
        - GovernanceDAO.state(uint256) (src/GovernanceDAO.sol#198-218)
        - proposal.hasVoted[msg.sender] = true (src/GovernanceDAO.sol#157)
        GovernanceDAO.proposals (src/GovernanceDAO.sol#52-53) can be used in cross function reentrancies:
        - GovernanceDAO.cancel(uint256) (src/GovernanceDAO.sol#175-194)
        - GovernanceDAO.castVote(uint256,bool,uint256) (src/GovernanceDAO.sol#138-159)
        - GovernanceDAO.execute(uint256) (src/GovernanceDAO.sol#164-172)
        - GovernanceDAO.getProposal(uint256) (src/GovernanceDAO.sol#221-239)
        - GovernanceDAO.hasVoted(uint256,address) (src/GovernanceDAO.sol#245-252)
        - GovernanceDAO.proposals (src/GovernanceDAO.sol#52-53)
        - GovernanceDAO.propose(uint256,string) (src/GovernanceDAO.sol#109-127)
        - GovernanceDAO.state(uint256) (src/GovernanceDAO.sol#198-218)
Reentrancy in Governance.executeProposal(uint256) (src/Governance.sol#93-103):
        External calls:
        - (success,None) = address(this).call(p.callData) (src/Governance.sol#100-101)
        State variables written after the call(s):
        - p.state = ProposalState.Executed (src/Governance.sol#103)
        Governance.proposals (src/Governance.sol#30-33) can be used in cross function reentrancies:
        - Governance.approveExecution(uint256) (src/Governance.sol#79-93)
        - Governance.executeProposal(uint256) (src/Governance.sol#93-103)
        - Governance.finalizeProposal(uint256) (src/Governance.sol#66-78)
        - Governance.proposals (src/Governance.sol#30-33)
        - Governance.propose(string,bytes) (src/Governance.sol#36-50)
        - Governance.vote(uint256) (src/Governance.sol#50-65)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
stdStorageSafe.find(StdStorage,bool) (lib/forge-std/src/StdStorage.sol#105-163) contains a tautology or contradiction:
        - -- i >= 0 (lib/forge-std/src/StdStorage.sol#124)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction
INFO:Detectors:
StdCheatsSafe.rawToConvertedReceipt(StdCheatsSafe.RawReceipt).receipt (lib/forge-std/src/StdCheats.sol#452) is a local variable never initialized
StdCheatsSafe.rawToConvertedEIPTx1559(StdCheatsSafe.RawTx1559).transaction (lib/forge-std/src/StdCheats.sol#384) is a local variable never initialized
StdCheatsSafe.rawToConvertedEIP1559Detail(StdCheatsSafe.RawTx1559Detail).txDetail (lib/forge-std/src/StdCheats.sol#396) is a local variable never initialized
stdStorageSafe.root(StdStorage).root_slot (lib/forge-std/src/StdStorage.sol#261) is a local variable never initialized
StdCheatsSafe.readEIP1559ScriptArtifact(string).artifact (lib/forge-std/src/StdCheats.sol#364) is a local variable never initialized
stdStorageSafe.bytesToBytes32(bytes,uint256).out (lib/forge-std/src/StdStorage.sol#276) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
StdCheatsSafe.isFork() (lib/forge-std/src/StdCheats.sol#571-577) ignores return value by vm.activeFork() (lib/forge-std/src/StdCheats.sol#574-576)
stdStorageSafe.find(StdStorage,bool) (lib/forge-std/src/StdStorage.sol#105-163) ignores return value by (reads,None) = vm.accesses(address(who)) (lib/forge-std/src/StdStorage.sol#117-119)
stdStorageSafe.root(StdStorage) (lib/forge-std/src/StdStorage.sol#253-272) ignores return value by (found,None,parent_slot) = vm.getMappingKeyAndParentOf(who,bytes32(child)) (lib/forge-std/src/StdStorage.sol#261-263)
stdStorageSafe.root(StdStorage) (lib/forge-std/src/StdStorage.sol#253-272) ignores return value by (found,None,parent_slot) = vm.getMappingKeyAndParentOf(who,bytes32(root_slot)) (lib/forge-std/src/StdStorage.sol#270-272)
stdStorage.parent(StdStorage) (lib/forge-std/src/StdStorage.sol#451-454) ignores return value by stdStorageSafe.parent(self) (lib/forge-std/src/StdStorage.sol#454)
StdUtils.getTokenBalances(address,address[]) (lib/forge-std/src/StdUtils.sol#130-157) ignores return value by (None,returnData) = multicall.aggregate(calls) (lib/forge-std/src/StdUtils.sol#150)
GovernanceDAO.castVote(uint256,bool,uint256) (src/GovernanceDAO.sol#138-159) ignores return value by governanceToken.castVote(proposalId,tokenId) (src/GovernanceDAO.sol#147-148)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
FractionalizedNFT.constructor(string,string).name (src/FractionalizedNFT.sol#63) shadows:
        - ERC721.name() (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#68-74) (function)
        - IERC721Metadata.name() (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol#14-16) (function)
FractionalizedNFT.constructor(string,string).symbol (src/FractionalizedNFT.sol#63-64) shadows:
        - ERC721.symbol() (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#75-81) (function)
        - IERC721Metadata.symbol() (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol#19-21) (function)
FractionalizedNFT.mint(address,uint256,string,string,string,uint256,uint256,bool).name (src/FractionalizedNFT.sol#81-83) shadows:
        - ERC721.name() (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#68-74) (function)
        - IERC721Metadata.name() (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol#14-16) (function)
FractionalizedNFT.getMetadata(uint256).name (src/FractionalizedNFT.sol#327) shadows:
        - ERC721.name() (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#68-74) (function)
        - IERC721Metadata.name() (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol#14-16) (function)
FractionalizedNFT.getFraction(uint256,address).owner (src/FractionalizedNFT.sol#365) shadows:
        - Ownable.owner() (lib/openzeppelin-contracts/contracts/access/Ownable.sol#54-56) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Modifier StdCheatsSafe.skipWhenForking() (lib/forge-std/src/StdCheats.sol#577-579) does not always execute _; or revert
Modifier StdCheatsSafe.skipWhenNotForking() (lib/forge-std/src/StdCheats.sol#579-583) does not always execute _; or revert
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier
INFO:Detectors:
Reentrancy in FractionalizedNFT.mint(address,uint256,string,string,string,uint256,uint256,bool) (src/FractionalizedNFT.sol#81-113):
        External calls:
        - _safeMint(to,tokenId) (src/FractionalizedNFT.sol#90-91)
                - retval = IERC721Receiver(to).onERC721Received(operator,from,tokenId,data) (lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol#32-45)
                - ERC721Utils.checkOnERC721Received(_msgSender(),address(0),to,tokenId,data) (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#310)
        State variables written after the call(s):
        - _fractionOwners[tokenId].push(to) (src/FractionalizedNFT.sol#111-112)
        - _fractions[tokenId][to] = Fraction({owner:to,amount:totalFractions,isDelegate:false,delegatedTo:address(0),hasVoted:false,lastVoteTimestamp:0}) (src/FractionalizedNFT.sol#103-110)
        - _metadata[tokenId] = NFTMetadata({name:name,description:description,uri:uri,royaltyPercentage:royaltyPercentage,totalFractions:totalFractions,availableFractions:totalFractions,accumulatedRoyalties:0,isEligibleForRageQuit:eligibleForRageQuit}) (src/FractionalizedNFT.sol#91-102)
        - _updateVotingPower(to) (src/FractionalizedNFT.sol#112-113)
                - _votingPower[account] = power (src/FractionalizedNFT.sol#422)
Reentrancy in StdCheatsSafe.noGasMetering() (lib/forge-std/src/StdCheats.sol#583-610):
        External calls:
        - vm.pauseGasMetering() (lib/forge-std/src/StdCheats.sol#583-584)
        State variables written after the call(s):
        - gasMeteringOff = true (lib/forge-std/src/StdCheats.sol#607)
        - gasMeteringOff = false (lib/forge-std/src/StdCheats.sol#609)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in GovernanceDAO.castVote(uint256,bool,uint256) (src/GovernanceDAO.sol#138-159):
        External calls:
        - governanceToken.castVote(proposalId,tokenId) (src/GovernanceDAO.sol#147-148)
        Event emitted after the call(s):
        - VoteCast(msg.sender,proposalId,support,votes) (src/GovernanceDAO.sol#158-159)
Reentrancy in stdStorageSafe.find(StdStorage,bool) (lib/forge-std/src/StdStorage.sol#105-163):
        External calls:
        - vm.record() (lib/forge-std/src/StdStorage.sol#116-117)
        - (reads,None) = vm.accesses(address(who)) (lib/forge-std/src/StdStorage.sol#117-119)
        - ! checkSlotMutatesCall(self,reads[i]) (lib/forge-std/src/StdStorage.sol#128-129)
                - vm.store(self._target,slot,testVal) (lib/forge-std/src/StdStorage.sol#59)
                - vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#62)
        - (found,offsetLeft,offsetRight) = findOffsets(self,reads[i]) (lib/forge-std/src/StdStorage.sol#136-138)
                - vm.store(self._target,slot,bytes32(valueToPut)) (lib/forge-std/src/StdStorage.sol#73)
                - vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#91)
        Event emitted after the call(s):
        - SlotFound(who,fsig,keccak256(bytes)(abi.encodePacked(params,field_depth)),uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#147-150)
        - WARNING_UninitedSlot(who,uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#126-127)
Reentrancy in stdStorageSafe.parent(StdStorage) (lib/forge-std/src/StdStorage.sol#239-253):
        External calls:
        - vm.startMappingRecording() (lib/forge-std/src/StdStorage.sol#243-244)
        - child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#244-247)
                - vm.store(self._target,slot,bytes32(valueToPut)) (lib/forge-std/src/StdStorage.sol#73)
                - vm.store(self._target,slot,testVal) (lib/forge-std/src/StdStorage.sol#59)
                - vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#91)
                - vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#62)
                - vm.record() (lib/forge-std/src/StdStorage.sol#116-117)
                - (reads,None) = vm.accesses(address(who)) (lib/forge-std/src/StdStorage.sol#117-119)
        Event emitted after the call(s):
        - SlotFound(who,fsig,keccak256(bytes)(abi.encodePacked(params,field_depth)),uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#147-150)
                - child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#244-247)
        - WARNING_UninitedSlot(who,uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#126-127)
                - child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#244-247)
Reentrancy in stdStorageSafe.root(StdStorage) (lib/forge-std/src/StdStorage.sol#253-272):
        External calls:
        - vm.startMappingRecording() (lib/forge-std/src/StdStorage.sol#255-256)
        - child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#257-258)
                - vm.store(self._target,slot,bytes32(valueToPut)) (lib/forge-std/src/StdStorage.sol#73)
                - vm.store(self._target,slot,testVal) (lib/forge-std/src/StdStorage.sol#59)
                - vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#91)
                - vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#62)
                - vm.record() (lib/forge-std/src/StdStorage.sol#116-117)
                - (reads,None) = vm.accesses(address(who)) (lib/forge-std/src/StdStorage.sol#117-119)
        Event emitted after the call(s):
        - SlotFound(who,fsig,keccak256(bytes)(abi.encodePacked(params,field_depth)),uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#147-150)
                - child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#257-258)
        - WARNING_UninitedSlot(who,uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#126-127)
                - child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#257-258)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
FractionalizedNFT.transferFractions(uint256,address,uint256) (src/FractionalizedNFT.sol#122-155) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(senderFraction.owner == msg.sender,Not the fraction owner) (src/FractionalizedNFT.sol#129-131)
        - require(bool,string)(senderFraction.amount >= amount,Insufficient fraction balance) (src/FractionalizedNFT.sol#131-132)
        - require(bool,string)(! senderFraction.hasVoted,Cannot transfer after voting) (src/FractionalizedNFT.sol#132-133)
        - require(bool,string)(senderFraction.delegatedTo == address(0),Cannot transfer delegated fractions) (src/FractionalizedNFT.sol#133-134)
FractionalizedNFT.delegateFractions(uint256,address,uint256) (src/FractionalizedNFT.sol#165-201) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(senderFraction.owner == msg.sender,Not the fraction owner) (src/FractionalizedNFT.sol#173-174)
        - require(bool,string)(senderFraction.amount >= amount,Insufficient fraction balance) (src/FractionalizedNFT.sol#174-176)
        - require(bool,string)(! senderFraction.hasVoted,Cannot delegate after voting) (src/FractionalizedNFT.sol#176-177)
        - require(bool,string)(senderFraction.delegatedTo == address(0),Already delegated) (src/FractionalizedNFT.sol#177-178)
FractionalizedNFT.castVote(uint256,uint256) (src/FractionalizedNFT.sol#211-225) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(fraction.amount > 0,No fractions to vote with) (src/FractionalizedNFT.sol#217-218)
        - require(bool,string)(! fraction.hasVoted,Fractions already used for voting) (src/FractionalizedNFT.sol#218)
FractionalizedNFT.claimRoyalties(uint256) (src/FractionalizedNFT.sol#280-301) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(fraction.owner == msg.sender,Not the fraction owner) (src/FractionalizedNFT.sol#287-288)
        - require(bool,string)(fraction.amount > 0,No fractions owned) (src/FractionalizedNFT.sol#288-290)
FractionalizedNFT._burnFractions(address,uint256) (src/FractionalizedNFT.sol#394-407) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(fraction.owner == account,Not the fraction owner) (src/FractionalizedNFT.sol#396-398)
Governance.vote(uint256) (src/Governance.sol#50-65) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(block.timestamp >= proposals[proposalId].startTime,Voting hasn't started) (src/Governance.sol#55-56)
        - require(bool,string)(block.timestamp <= proposals[proposalId].endTime,Voting ended) (src/Governance.sol#56-57)
Governance.finalizeProposal(uint256) (src/Governance.sol#66-78) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(block.timestamp > p.endTime,Voting still ongoing) (src/Governance.sol#73-74)
Governance.approveExecution(uint256) (src/Governance.sol#79-93) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(p.state == ProposalState.Passed,Not passed) (src/Governance.sol#84-85)
Governance.executeProposal(uint256) (src/Governance.sol#93-103) uses timestamp for comparisons
        Dangerous comparisons:
        - require(bool,string)(p.state == ProposalState.Passed,Not approved) (src/Governance.sol#98-99)
        - require(bool,string)(p.approvals >= requiredApprovals,Insufficient approvals) (src/Governance.sol#99-100)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
StdChains.getChainWithUpdatedRpcUrl(string,StdChains.Chain) (lib/forge-std/src/StdChains.sol#146-179) uses assembly
        - INLINE ASM (lib/forge-std/src/StdChains.sol#175-177)
StdCheatsSafe.assumeNotBlacklisted(address,address) (lib/forge-std/src/StdCheats.sol#200-224) uses assembly
        - INLINE ASM (lib/forge-std/src/StdCheats.sol#208-209)
StdCheatsSafe.assumeUnusedAddress(address) (lib/forge-std/src/StdCheats.sol#341-348) uses assembly
        - INLINE ASM (lib/forge-std/src/StdCheats.sol#345-346)
StdCheatsSafe.deployCode(string,bytes) (lib/forge-std/src/StdCheats.sol#490-500) uses assembly
        - INLINE ASM (lib/forge-std/src/StdCheats.sol#493-496)
StdCheatsSafe.deployCode(string) (lib/forge-std/src/StdCheats.sol#500-506) uses assembly
        - INLINE ASM (lib/forge-std/src/StdCheats.sol#503-504)
StdCheatsSafe.deployCode(string,bytes,uint256) (lib/forge-std/src/StdCheats.sol#509-519) uses assembly
        - INLINE ASM (lib/forge-std/src/StdCheats.sol#514-516)
StdCheatsSafe.deployCode(string,uint256) (lib/forge-std/src/StdCheats.sol#519-527) uses assembly
        - INLINE ASM (lib/forge-std/src/StdCheats.sol#524-525)
StdCheatsSafe._viewChainId() (lib/forge-std/src/StdCheats.sol#616-627) uses assembly
        - INLINE ASM (lib/forge-std/src/StdCheats.sol#621-622)
StdCheatsSafe._pureChainId() (lib/forge-std/src/StdCheats.sol#627-630) uses assembly
        - INLINE ASM (lib/forge-std/src/StdCheats.sol#629)
stdStorageSafe.flatten(bytes32[]) (lib/forge-std/src/StdStorage.sol#282-293) uses assembly
        - INLINE ASM (lib/forge-std/src/StdStorage.sol#289-292)
stdStorageSafe.getMaskByOffsets(uint256,uint256) (lib/forge-std/src/StdStorage.sol#308-316) uses assembly
        - INLINE ASM (lib/forge-std/src/StdStorage.sol#315-316)
stdStorage.checked_write(StdStorage,bool) (lib/forge-std/src/StdStorage.sol#389-394) uses assembly
        - INLINE ASM (lib/forge-std/src/StdStorage.sol#393)
StdUtils.getTokenBalances(address,address[]) (lib/forge-std/src/StdUtils.sol#130-157) uses assembly
        - INLINE ASM (lib/forge-std/src/StdUtils.sol#134-137)
StdUtils._castLogPayloadViewToPure(function(bytes)) (lib/forge-std/src/StdUtils.sol#172-174) uses assembly
        - INLINE ASM (lib/forge-std/src/StdUtils.sol#174)
StdUtils._sendLogPayloadView(bytes) (lib/forge-std/src/StdUtils.sol#180-191) uses assembly
        - INLINE ASM (lib/forge-std/src/StdUtils.sol#188-191)
console._sendLogPayloadImplementation(bytes) (lib/forge-std/src/console.sol#6-21) uses assembly
        - INLINE ASM (lib/forge-std/src/console.sol#10-21)
console._castToPure(function(bytes)) (lib/forge-std/src/console.sol#22-29) uses assembly
        - INLINE ASM (lib/forge-std/src/console.sol#27-29)
safeconsole._sendLogPayload(uint256,uint256) (lib/forge-std/src/safeconsole.sol#10-18) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#14-16)
safeconsole._sendLogPayloadView(uint256,uint256) (lib/forge-std/src/safeconsole.sol#18-24) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#22-24)
safeconsole._memcopy(uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#24-35) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#31-33)
safeconsole._memcopyView(uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#35-41) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#39-41)
safeconsole.logMemory(uint256,uint256) (lib/forge-std/src/safeconsole.sol#41-93) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#51-59)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#61-65)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#73-77)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#80-85)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#89-93)
safeconsole.log(address) (lib/forge-std/src/safeconsole.sol#93-111) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#99-106)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#108-111)
safeconsole.log(bool) (lib/forge-std/src/safeconsole.sol#111-130) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#118-124)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#127-130)
safeconsole.log(uint256) (lib/forge-std/src/safeconsole.sol#130-148) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#137-143)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#145-148)
safeconsole.log(bytes32) (lib/forge-std/src/safeconsole.sol#148-180) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#156-173)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#175-180)
safeconsole.log(address,address) (lib/forge-std/src/safeconsole.sol#180-202) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#186-196)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#198-202)
safeconsole.log(address,bool) (lib/forge-std/src/safeconsole.sol#203-224) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#208-218)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#221-224)
safeconsole.log(address,uint256) (lib/forge-std/src/safeconsole.sol#224-246) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#230-241)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#244-246)
safeconsole.log(address,bytes32) (lib/forge-std/src/safeconsole.sol#247-282) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#254-275)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#278-282)
safeconsole.log(bool,address) (lib/forge-std/src/safeconsole.sol#282-305) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#288-299)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#302-304)
safeconsole.log(bool,bool) (lib/forge-std/src/safeconsole.sol#305-327) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#310-321)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#324-327)
safeconsole.log(bool,uint256) (lib/forge-std/src/safeconsole.sol#327-350) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#332-343)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#346-349)
safeconsole.log(bool,bytes32) (lib/forge-std/src/safeconsole.sol#350-385) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#356-377)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#380-385)
safeconsole.log(uint256,address) (lib/forge-std/src/safeconsole.sol#385-408) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#391-401)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#404-408)
safeconsole.log(uint256,bool) (lib/forge-std/src/safeconsole.sol#408-430) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#412-422)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#426-430)
safeconsole.log(uint256,uint256) (lib/forge-std/src/safeconsole.sol#430-452) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#435-443)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#448-452)
safeconsole.log(uint256,bytes32) (lib/forge-std/src/safeconsole.sol#453-488) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#458-481)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#483-488)
safeconsole.log(bytes32,address) (lib/forge-std/src/safeconsole.sol#488-524) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#494-517)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#519-524)
safeconsole.log(bytes32,bool) (lib/forge-std/src/safeconsole.sol#524-560) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#530-554)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#556-560)
safeconsole.log(bytes32,uint256) (lib/forge-std/src/safeconsole.sol#560-596) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#566-591)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#592-595)
safeconsole.log(bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#596-638) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#603-630)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#632-638)
safeconsole.log(address,address,address) (lib/forge-std/src/safeconsole.sol#639-664) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#644-655)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#658-663)
safeconsole.log(address,address,bool) (lib/forge-std/src/safeconsole.sol#664-689) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#671-680)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#683-689)
safeconsole.log(address,address,uint256) (lib/forge-std/src/safeconsole.sol#689-716) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#697-707)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#710-716)
safeconsole.log(address,address,bytes32) (lib/forge-std/src/safeconsole.sol#716-757) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#725-752)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#754-757)
safeconsole.log(address,bool,address) (lib/forge-std/src/safeconsole.sol#757-780) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#763-772)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#775-780)
safeconsole.log(address,bool,bool) (lib/forge-std/src/safeconsole.sol#780-806) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#789-798)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#801-806)
safeconsole.log(address,bool,uint256) (lib/forge-std/src/safeconsole.sol#806-832) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#815-824)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#828-832)
safeconsole.log(address,bool,bytes32) (lib/forge-std/src/safeconsole.sol#832-876) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#842-869)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#872-876)
safeconsole.log(address,uint256,address) (lib/forge-std/src/safeconsole.sol#876-898) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#881-890)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#894-898)
safeconsole.log(address,uint256,bool) (lib/forge-std/src/safeconsole.sol#898-924) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#906-917)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#919-924)
safeconsole.log(address,uint256,uint256) (lib/forge-std/src/safeconsole.sol#924-950) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#933-944)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#945-950)
safeconsole.log(address,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#951-997) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#960-987)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#990-997)
safeconsole.log(address,bytes32,address) (lib/forge-std/src/safeconsole.sol#997-1037) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1001-1025)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1029-1037)
safeconsole.log(address,bytes32,bool) (lib/forge-std/src/safeconsole.sol#1037-1076) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1041-1064)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1069-1076)
safeconsole.log(address,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#1076-1116) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1081-1104)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1108-1116)
safeconsole.log(address,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#1117-1162) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1122-1150)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1152-1162)
safeconsole.log(bool,address,address) (lib/forge-std/src/safeconsole.sol#1163-1181) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1166-1175)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1177-1181)
safeconsole.log(bool,address,bool) (lib/forge-std/src/safeconsole.sol#1181-1208) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1188-1199)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1204-1208)
safeconsole.log(bool,address,uint256) (lib/forge-std/src/safeconsole.sol#1208-1234) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1213-1226)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1229-1234)
safeconsole.log(bool,address,bytes32) (lib/forge-std/src/safeconsole.sol#1234-1280) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1241-1268)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1271-1280)
safeconsole.log(bool,bool,address) (lib/forge-std/src/safeconsole.sol#1280-1300) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1287-1293)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1296-1300)
safeconsole.log(bool,bool,bool) (lib/forge-std/src/safeconsole.sol#1300-1326) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1305-1316)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1321-1326)
safeconsole.log(bool,bool,uint256) (lib/forge-std/src/safeconsole.sol#1326-1352) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1332-1342)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1346-1352)
safeconsole.log(bool,bool,bytes32) (lib/forge-std/src/safeconsole.sol#1352-1395) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1359-1386)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1389-1395)
safeconsole.log(bool,uint256,address) (lib/forge-std/src/safeconsole.sol#1396-1418) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1404-1413)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1415-1418)
safeconsole.log(bool,uint256,bool) (lib/forge-std/src/safeconsole.sol#1418-1443) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1424-1434)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1437-1443)
safeconsole.log(bool,uint256,uint256) (lib/forge-std/src/safeconsole.sol#1443-1470) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1451-1460)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1463-1470)
safeconsole.log(bool,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#1470-1514) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1478-1505)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1508-1514)
safeconsole.log(bool,bytes32,address) (lib/forge-std/src/safeconsole.sol#1514-1553) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1524-1545)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1547-1553)
safeconsole.log(bool,bytes32,bool) (lib/forge-std/src/safeconsole.sol#1554-1592) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1561-1584)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1587-1592)
safeconsole.log(bool,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#1593-1632) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1601-1624)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1627-1632)
safeconsole.log(bool,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#1633-1679) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1642-1668)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1670-1678)
safeconsole.log(uint256,address,address) (lib/forge-std/src/safeconsole.sol#1679-1703) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1688-1699)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1701-1703)
safeconsole.log(uint256,address,bool) (lib/forge-std/src/safeconsole.sol#1703-1725) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1709-1718)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1721-1725)
safeconsole.log(uint256,address,uint256) (lib/forge-std/src/safeconsole.sol#1726-1751) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1732-1745)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1747-1751)
safeconsole.log(uint256,address,bytes32) (lib/forge-std/src/safeconsole.sol#1752-1798) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1760-1787)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1790-1798)
safeconsole.log(uint256,bool,address) (lib/forge-std/src/safeconsole.sol#1798-1824) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1803-1817)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1819-1824)
safeconsole.log(uint256,bool,bool) (lib/forge-std/src/safeconsole.sol#1825-1843) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1828-1837)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1839-1843)
safeconsole.log(uint256,bool,uint256) (lib/forge-std/src/safeconsole.sol#1843-1869) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1850-1863)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1865-1869)
safeconsole.log(uint256,bool,bytes32) (lib/forge-std/src/safeconsole.sol#1869-1916) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1877-1904)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1907-1915)
safeconsole.log(uint256,uint256,address) (lib/forge-std/src/safeconsole.sol#1916-1942) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1922-1932)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1935-1941)
safeconsole.log(uint256,uint256,bool) (lib/forge-std/src/safeconsole.sol#1942-1962) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1949-1955)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1958-1961)
safeconsole.log(uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#1962-1989) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1968-1980)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1984-1988)
safeconsole.log(uint256,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#1989-2034) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#1995-2022)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2025-2034)
safeconsole.log(uint256,bytes32,address) (lib/forge-std/src/safeconsole.sol#2034-2075) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2042-2069)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2072-2075)
safeconsole.log(uint256,bytes32,bool) (lib/forge-std/src/safeconsole.sol#2075-2115) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2082-2109)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2111-2115)
safeconsole.log(uint256,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#2115-2155) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2121-2148)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2152-2155)
safeconsole.log(uint256,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#2155-2199) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2162-2193)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2195-2199)
safeconsole.log(bytes32,address,address) (lib/forge-std/src/safeconsole.sol#2200-2240) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2206-2235)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2237-2240)
safeconsole.log(bytes32,address,bool) (lib/forge-std/src/safeconsole.sol#2240-2283) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2247-2273)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2276-2283)
safeconsole.log(bytes32,address,uint256) (lib/forge-std/src/safeconsole.sol#2283-2323) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2287-2313)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2315-2323)
safeconsole.log(bytes32,address,bytes32) (lib/forge-std/src/safeconsole.sol#2323-2366) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2328-2357)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2361-2366)
safeconsole.log(bytes32,bool,address) (lib/forge-std/src/safeconsole.sol#2367-2409) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2373-2398)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2403-2409)
safeconsole.log(bytes32,bool,bool) (lib/forge-std/src/safeconsole.sol#2409-2448) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2412-2436)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2439-2448)
safeconsole.log(bytes32,bool,uint256) (lib/forge-std/src/safeconsole.sol#2449-2487) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2455-2476)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2479-2487)
safeconsole.log(bytes32,bool,bytes32) (lib/forge-std/src/safeconsole.sol#2488-2535) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2496-2520)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2526-2534)
safeconsole.log(bytes32,uint256,address) (lib/forge-std/src/safeconsole.sol#2535-2575) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2539-2562)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2567-2575)
safeconsole.log(bytes32,uint256,bool) (lib/forge-std/src/safeconsole.sol#2575-2612) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2580-2602)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2605-2612)
safeconsole.log(bytes32,uint256,uint256) (lib/forge-std/src/safeconsole.sol#2613-2651) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2622-2642)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2645-2651)
safeconsole.log(bytes32,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#2652-2699) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2663-2686)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2689-2699)
safeconsole.log(bytes32,bytes32,address) (lib/forge-std/src/safeconsole.sol#2699-2747) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2708-2732)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2736-2747)
safeconsole.log(bytes32,bytes32,bool) (lib/forge-std/src/safeconsole.sol#2747-2793) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2753-2778)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2781-2792)
safeconsole.log(bytes32,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#2793-2839) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2799-2825)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2828-2838)
safeconsole.log(bytes32,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#2839-2893) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2847-2876)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2880-2893)
safeconsole.log(address,address,address,address) (lib/forge-std/src/safeconsole.sol#2893-2916) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2897-2908)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2910-2916)
safeconsole.log(address,address,address,bool) (lib/forge-std/src/safeconsole.sol#2916-2945) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2923-2940)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2943-2945)
safeconsole.log(address,address,address,uint256) (lib/forge-std/src/safeconsole.sol#2946-2971) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2951-2963)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2965-2970)
safeconsole.log(address,address,address,bytes32) (lib/forge-std/src/safeconsole.sol#2971-3021) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#2980-3008)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3011-3021)
safeconsole.log(address,address,bool,address) (lib/forge-std/src/safeconsole.sol#3021-3051) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3029-3040)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3043-3050)
safeconsole.log(address,address,bool,bool) (lib/forge-std/src/safeconsole.sol#3051-3080) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3058-3070)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3073-3079)
safeconsole.log(address,address,bool,uint256) (lib/forge-std/src/safeconsole.sol#3080-3104) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3088-3097)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3100-3103)
safeconsole.log(address,address,bool,bytes32) (lib/forge-std/src/safeconsole.sol#3104-3154) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3113-3141)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3144-3154)
safeconsole.log(address,address,uint256,address) (lib/forge-std/src/safeconsole.sol#3154-3185) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3162-3174)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3177-3183)
safeconsole.log(address,address,uint256,bool) (lib/forge-std/src/safeconsole.sol#3185-3212) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3192-3203)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3206-3212)
safeconsole.log(address,address,uint256,uint256) (lib/forge-std/src/safeconsole.sol#3212-3239) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3223-3231)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3234-3239)
safeconsole.log(address,address,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#3239-3286) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3247-3275)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3278-3286)
safeconsole.log(address,address,bytes32,address) (lib/forge-std/src/safeconsole.sol#3286-3336) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3297-3325)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3329-3336)
safeconsole.log(address,address,bytes32,bool) (lib/forge-std/src/safeconsole.sol#3336-3378) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3344-3369)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3372-3378)
safeconsole.log(address,address,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#3379-3423) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3387-3413)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3416-3423)
safeconsole.log(address,address,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#3423-3472) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3432-3461)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3464-3472)
safeconsole.log(address,bool,address,address) (lib/forge-std/src/safeconsole.sol#3472-3501) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3480-3495)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3498-3501)
safeconsole.log(address,bool,address,bool) (lib/forge-std/src/safeconsole.sol#3501-3526) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3506-3517)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3521-3526)
safeconsole.log(address,bool,address,uint256) (lib/forge-std/src/safeconsole.sol#3526-3553) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3534-3548)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3549-3553)
safeconsole.log(address,bool,address,bytes32) (lib/forge-std/src/safeconsole.sol#3553-3599) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3562-3590)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3593-3599)
safeconsole.log(address,bool,bool,address) (lib/forge-std/src/safeconsole.sol#3600-3630) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3607-3622)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3625-3630)
safeconsole.log(address,bool,bool,bool) (lib/forge-std/src/safeconsole.sol#3630-3660) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3637-3651)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3654-3660)
safeconsole.log(address,bool,bool,uint256) (lib/forge-std/src/safeconsole.sol#3660-3690) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3666-3680)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3685-3690)
safeconsole.log(address,bool,bool,bytes32) (lib/forge-std/src/safeconsole.sol#3690-3733) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3694-3721)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3725-3733)
safeconsole.log(address,bool,uint256,address) (lib/forge-std/src/safeconsole.sol#3734-3764) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3740-3755)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3757-3764)
safeconsole.log(address,bool,uint256,bool) (lib/forge-std/src/safeconsole.sol#3764-3794) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3770-3784)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3787-3794)
safeconsole.log(address,bool,uint256,uint256) (lib/forge-std/src/safeconsole.sol#3794-3825) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3800-3813)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3817-3825)
safeconsole.log(address,bool,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#3825-3868) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3830-3855)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3858-3868)
safeconsole.log(address,bool,bytes32,address) (lib/forge-std/src/safeconsole.sol#3868-3914) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3875-3905)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3907-3914)
safeconsole.log(address,bool,bytes32,bool) (lib/forge-std/src/safeconsole.sol#3915-3965) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3924-3954)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3956-3965)
safeconsole.log(address,bool,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#3965-4009) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#3970-3996)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4000-4008)
safeconsole.log(address,bool,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#4009-4057) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4015-4045)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4048-4057)
safeconsole.log(address,uint256,address,address) (lib/forge-std/src/safeconsole.sol#4057-4082) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4062-4073)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4077-4082)
safeconsole.log(address,uint256,address,bool) (lib/forge-std/src/safeconsole.sol#4082-4109) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4090-4102)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4104-4108)
safeconsole.log(address,uint256,address,uint256) (lib/forge-std/src/safeconsole.sol#4109-4138) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4115-4128)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4131-4138)
safeconsole.log(address,uint256,address,bytes32) (lib/forge-std/src/safeconsole.sol#4138-4181) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4148-4170)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4173-4180)
safeconsole.log(address,uint256,bool,address) (lib/forge-std/src/safeconsole.sol#4181-4210) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4189-4201)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4204-4210)
safeconsole.log(address,uint256,bool,bool) (lib/forge-std/src/safeconsole.sol#4210-4240) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4219-4231)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4234-4240)
safeconsole.log(address,uint256,bool,uint256) (lib/forge-std/src/safeconsole.sol#4240-4270) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4249-4262)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4264-4270)
safeconsole.log(address,uint256,bool,bytes32) (lib/forge-std/src/safeconsole.sol#4270-4313) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4280-4304)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4305-4313)
safeconsole.log(address,uint256,uint256,address) (lib/forge-std/src/safeconsole.sol#4313-4343) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4321-4336)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4338-4343)
safeconsole.log(address,uint256,uint256,bool) (lib/forge-std/src/safeconsole.sol#4343-4373) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4351-4366)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4369-4373)
safeconsole.log(address,uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#4373-4403) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4381-4396)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4399-4403)
safeconsole.log(address,uint256,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#4404-4447) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4413-4438)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4441-4447)
safeconsole.log(address,uint256,bytes32,address) (lib/forge-std/src/safeconsole.sol#4447-4497) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4456-4485)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4488-4497)
safeconsole.log(address,uint256,bytes32,bool) (lib/forge-std/src/safeconsole.sol#4497-4545) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4506-4535)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4538-4544)
safeconsole.log(address,uint256,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#4545-4588) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4556-4579)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4580-4588)
safeconsole.log(address,uint256,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#4588-4638) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4601-4625)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4628-4638)
safeconsole.log(address,bytes32,address,address) (lib/forge-std/src/safeconsole.sol#4638-4682) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4648-4671)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4674-4681)
safeconsole.log(address,bytes32,address,bool) (lib/forge-std/src/safeconsole.sol#4682-4724) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4691-4715)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4717-4724)
safeconsole.log(address,bytes32,address,uint256) (lib/forge-std/src/safeconsole.sol#4725-4769) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4736-4760)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4763-4769)
safeconsole.log(address,bytes32,address,bytes32) (lib/forge-std/src/safeconsole.sol#4769-4818) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4779-4808)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4811-4818)
safeconsole.log(address,bytes32,bool,address) (lib/forge-std/src/safeconsole.sol#4819-4862) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4828-4853)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4856-4862)
safeconsole.log(address,bytes32,bool,bool) (lib/forge-std/src/safeconsole.sol#4862-4905) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4871-4896)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4899-4905)
safeconsole.log(address,bytes32,bool,uint256) (lib/forge-std/src/safeconsole.sol#4905-4950) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4914-4940)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4943-4950)
safeconsole.log(address,bytes32,bool,bytes32) (lib/forge-std/src/safeconsole.sol#4951-4999) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4960-4989)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#4990-4999)
safeconsole.log(address,bytes32,uint256,address) (lib/forge-std/src/safeconsole.sol#4999-5044) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5008-5034)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5037-5044)
safeconsole.log(address,bytes32,uint256,bool) (lib/forge-std/src/safeconsole.sol#5044-5088) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5052-5079)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5080-5087)
safeconsole.log(address,bytes32,uint256,uint256) (lib/forge-std/src/safeconsole.sol#5088-5132) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5095-5124)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5126-5132)
safeconsole.log(address,bytes32,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#5132-5182) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5141-5174)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5174-5182)
safeconsole.log(address,bytes32,bytes32,address) (lib/forge-std/src/safeconsole.sol#5182-5231) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5191-5221)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5222-5231)
safeconsole.log(address,bytes32,bytes32,bool) (lib/forge-std/src/safeconsole.sol#5231-5280) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5240-5269)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5272-5280)
safeconsole.log(address,bytes32,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#5280-5331) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5291-5320)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5323-5330)
safeconsole.log(address,bytes32,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#5331-5387) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5342-5375)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5377-5387)
safeconsole.log(bool,address,address,address) (lib/forge-std/src/safeconsole.sol#5387-5416) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5395-5411)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5414-5416)
safeconsole.log(bool,address,address,bool) (lib/forge-std/src/safeconsole.sol#5417-5442) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5422-5433)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5436-5442)
safeconsole.log(bool,address,address,uint256) (lib/forge-std/src/safeconsole.sol#5442-5470) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5450-5465)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5467-5470)
safeconsole.log(bool,address,address,bytes32) (lib/forge-std/src/safeconsole.sol#5470-5519) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5478-5505)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5509-5518)
safeconsole.log(bool,address,bool,address) (lib/forge-std/src/safeconsole.sol#5519-5541) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5523-5534)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5536-5540)
safeconsole.log(bool,address,bool,bool) (lib/forge-std/src/safeconsole.sol#5541-5570) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5548-5560)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5564-5570)
safeconsole.log(bool,address,bool,uint256) (lib/forge-std/src/safeconsole.sol#5571-5601) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5577-5590)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5595-5601)
safeconsole.log(bool,address,bool,bytes32) (lib/forge-std/src/safeconsole.sol#5601-5647) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5608-5638)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5640-5647)
safeconsole.log(bool,address,uint256,address) (lib/forge-std/src/safeconsole.sol#5647-5674) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5657-5669)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5670-5674)
safeconsole.log(bool,address,uint256,bool) (lib/forge-std/src/safeconsole.sol#5674-5703) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5681-5693)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5696-5702)
safeconsole.log(bool,address,uint256,uint256) (lib/forge-std/src/safeconsole.sol#5703-5733) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5712-5723)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5726-5733)
safeconsole.log(bool,address,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#5733-5781) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5743-5772)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5775-5781)
safeconsole.log(bool,address,bytes32,address) (lib/forge-std/src/safeconsole.sol#5781-5825) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5790-5816)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5819-5825)
safeconsole.log(bool,address,bytes32,bool) (lib/forge-std/src/safeconsole.sol#5825-5875) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5834-5863)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5866-5875)
safeconsole.log(bool,address,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#5875-5922) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5884-5913)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5915-5922)
safeconsole.log(bool,address,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#5923-5972) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5933-5960)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5963-5972)
safeconsole.log(bool,bool,address,address) (lib/forge-std/src/safeconsole.sol#5973-5999) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5982-5992)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#5993-5999)
safeconsole.log(bool,bool,address,bool) (lib/forge-std/src/safeconsole.sol#5999-6029) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6005-6018)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6023-6028)
safeconsole.log(bool,bool,address,uint256) (lib/forge-std/src/safeconsole.sol#6029-6051) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6035-6044)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6047-6051)
safeconsole.log(bool,bool,address,bytes32) (lib/forge-std/src/safeconsole.sol#6052-6095) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6060-6086)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6089-6095)
safeconsole.log(bool,bool,bool,address) (lib/forge-std/src/safeconsole.sol#6095-6126) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6102-6117)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6121-6126)
safeconsole.log(bool,bool,bool,bool) (lib/forge-std/src/safeconsole.sol#6127-6148) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6130-6141)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6143-6148)
safeconsole.log(bool,bool,bool,uint256) (lib/forge-std/src/safeconsole.sol#6149-6178) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6156-6171)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6174-6178)
safeconsole.log(bool,bool,bool,bytes32) (lib/forge-std/src/safeconsole.sol#6179-6227) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6187-6216)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6219-6227)
safeconsole.log(bool,bool,uint256,address) (lib/forge-std/src/safeconsole.sol#6228-6258) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6236-6248)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6251-6258)
safeconsole.log(bool,bool,uint256,bool) (lib/forge-std/src/safeconsole.sol#6258-6282) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6266-6274)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6277-6282)
safeconsole.log(bool,bool,uint256,uint256) (lib/forge-std/src/safeconsole.sol#6282-6313) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6290-6303)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6307-6313)
safeconsole.log(bool,bool,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#6313-6360) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6320-6349)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6352-6360)
safeconsole.log(bool,bool,bytes32,address) (lib/forge-std/src/safeconsole.sol#6361-6408) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6371-6400)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6404-6408)
safeconsole.log(bool,bool,bytes32,bool) (lib/forge-std/src/safeconsole.sol#6409-6454) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6415-6443)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6447-6454)
safeconsole.log(bool,bool,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#6454-6503) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6462-6491)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6494-6503)
safeconsole.log(bool,bool,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#6503-6554) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6514-6546)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6546-6554)
safeconsole.log(bool,uint256,address,address) (lib/forge-std/src/safeconsole.sol#6554-6584) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6560-6573)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6577-6584)
safeconsole.log(bool,uint256,address,bool) (lib/forge-std/src/safeconsole.sol#6584-6607) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6591-6600)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6603-6607)
safeconsole.log(bool,uint256,address,uint256) (lib/forge-std/src/safeconsole.sol#6607-6636) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6615-6630)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6633-6636)
safeconsole.log(bool,uint256,address,bytes32) (lib/forge-std/src/safeconsole.sol#6636-6681) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6643-6671)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6675-6681)
safeconsole.log(bool,uint256,bool,address) (lib/forge-std/src/safeconsole.sol#6681-6705) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6685-6697)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6699-6705)
safeconsole.log(bool,uint256,bool,bool) (lib/forge-std/src/safeconsole.sol#6706-6733) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6714-6728)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6729-6732)
safeconsole.log(bool,uint256,bool,uint256) (lib/forge-std/src/safeconsole.sol#6733-6760) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6740-6751)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6754-6760)
safeconsole.log(bool,uint256,bool,bytes32) (lib/forge-std/src/safeconsole.sol#6760-6810) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6771-6798)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6802-6810)
safeconsole.log(bool,uint256,uint256,address) (lib/forge-std/src/safeconsole.sol#6810-6840) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6817-6831)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6834-6840)
safeconsole.log(bool,uint256,uint256,bool) (lib/forge-std/src/safeconsole.sol#6840-6870) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6846-6860)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6864-6870)
safeconsole.log(bool,uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#6870-6893) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6874-6884)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6887-6892)
safeconsole.log(bool,uint256,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#6893-6944) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6904-6931)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6935-6943)
safeconsole.log(bool,uint256,bytes32,address) (lib/forge-std/src/safeconsole.sol#6944-6991) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6951-6980)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#6983-6991)
safeconsole.log(bool,uint256,bytes32,bool) (lib/forge-std/src/safeconsole.sol#6991-7034) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7002-7024)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7027-7034)
safeconsole.log(bool,uint256,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#7035-7085) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7045-7073)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7077-7084)
safeconsole.log(bool,uint256,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#7085-7141) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7094-7125)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7129-7140)
safeconsole.log(bool,bytes32,address,address) (lib/forge-std/src/safeconsole.sol#7141-7183) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7147-7171)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7174-7183)
safeconsole.log(bool,bytes32,address,bool) (lib/forge-std/src/safeconsole.sol#7184-7226) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7192-7215)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7217-7226)
safeconsole.log(bool,bytes32,address,uint256) (lib/forge-std/src/safeconsole.sol#7226-7270) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7236-7258)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7261-7270)
safeconsole.log(bool,bytes32,address,bytes32) (lib/forge-std/src/safeconsole.sol#7270-7321) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7281-7306)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7309-7321)
safeconsole.log(bool,bytes32,bool,address) (lib/forge-std/src/safeconsole.sol#7322-7362) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7329-7352)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7355-7362)
safeconsole.log(bool,bytes32,bool,bool) (lib/forge-std/src/safeconsole.sol#7363-7405) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7374-7395)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7398-7405)
safeconsole.log(bool,bytes32,bool,uint256) (lib/forge-std/src/safeconsole.sol#7406-7449) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7416-7438)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7441-7449)
safeconsole.log(bool,bytes32,bool,bytes32) (lib/forge-std/src/safeconsole.sol#7449-7499) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7461-7486)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7489-7499)
safeconsole.log(bool,bytes32,uint256,address) (lib/forge-std/src/safeconsole.sol#7500-7543) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7511-7532)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7535-7542)
safeconsole.log(bool,bytes32,uint256,bool) (lib/forge-std/src/safeconsole.sol#7543-7586) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7554-7577)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7579-7586)
safeconsole.log(bool,bytes32,uint256,uint256) (lib/forge-std/src/safeconsole.sol#7586-7630) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7595-7621)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7623-7630)
safeconsole.log(bool,bytes32,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#7631-7680) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7640-7668)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7671-7680)
safeconsole.log(bool,bytes32,bytes32,address) (lib/forge-std/src/safeconsole.sol#7680-7731) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7692-7718)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7721-7730)
safeconsole.log(bool,bytes32,bytes32,bool) (lib/forge-std/src/safeconsole.sol#7731-7780) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7742-7768)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7771-7780)
safeconsole.log(bool,bytes32,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#7781-7831) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7794-7818)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7821-7831)
safeconsole.log(bool,bytes32,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#7832-7890) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7843-7873)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7877-7890)
safeconsole.log(uint256,address,address,address) (lib/forge-std/src/safeconsole.sol#7890-7913) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7893-7905)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7908-7913)
safeconsole.log(uint256,address,address,bool) (lib/forge-std/src/safeconsole.sol#7914-7942) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7921-7937)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7940-7942)
safeconsole.log(uint256,address,address,uint256) (lib/forge-std/src/safeconsole.sol#7943-7968) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7948-7960)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7962-7968)
safeconsole.log(uint256,address,address,bytes32) (lib/forge-std/src/safeconsole.sol#7968-8012) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#7980-8003)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8006-8012)
safeconsole.log(uint256,address,bool,address) (lib/forge-std/src/safeconsole.sol#8013-8044) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8020-8034)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8038-8044)
safeconsole.log(uint256,address,bool,bool) (lib/forge-std/src/safeconsole.sol#8044-8067) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8048-8060)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8061-8067)
safeconsole.log(uint256,address,bool,uint256) (lib/forge-std/src/safeconsole.sol#8067-8099) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8074-8090)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8094-8099)
safeconsole.log(uint256,address,bool,bytes32) (lib/forge-std/src/safeconsole.sol#8099-8140) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8103-8129)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8132-8140)
safeconsole.log(uint256,address,uint256,address) (lib/forge-std/src/safeconsole.sol#8141-8170) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8149-8161)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8164-8170)
safeconsole.log(uint256,address,uint256,bool) (lib/forge-std/src/safeconsole.sol#8170-8200) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8180-8191)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8194-8200)
safeconsole.log(uint256,address,uint256,uint256) (lib/forge-std/src/safeconsole.sol#8200-8230) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8209-8221)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8224-8229)
safeconsole.log(uint256,address,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#8230-8273) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8241-8263)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8265-8273)
safeconsole.log(uint256,address,bytes32,address) (lib/forge-std/src/safeconsole.sol#8273-8324) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8284-8312)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8316-8323)
safeconsole.log(uint256,address,bytes32,bool) (lib/forge-std/src/safeconsole.sol#8324-8371) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8332-8360)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8363-8371)
safeconsole.log(uint256,address,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#8372-8414) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8382-8404)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8407-8414)
safeconsole.log(uint256,address,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#8415-8470) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8427-8459)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8462-8470)
safeconsole.log(uint256,bool,address,address) (lib/forge-std/src/safeconsole.sol#8470-8499) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8478-8492)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8494-8499)
safeconsole.log(uint256,bool,address,bool) (lib/forge-std/src/safeconsole.sol#8500-8527) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8507-8522)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8524-8527)
safeconsole.log(uint256,bool,address,uint256) (lib/forge-std/src/safeconsole.sol#8527-8554) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8534-8545)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8548-8554)
safeconsole.log(uint256,bool,address,bytes32) (lib/forge-std/src/safeconsole.sol#8555-8597) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8565-8586)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8590-8597)
safeconsole.log(uint256,bool,bool,address) (lib/forge-std/src/safeconsole.sol#8597-8624) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8607-8616)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8618-8623)
safeconsole.log(uint256,bool,bool,bool) (lib/forge-std/src/safeconsole.sol#8624-8653) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8630-8642)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8647-8653)
safeconsole.log(uint256,bool,bool,uint256) (lib/forge-std/src/safeconsole.sol#8654-8676) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8659-8669)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8671-8676)
safeconsole.log(uint256,bool,bool,bytes32) (lib/forge-std/src/safeconsole.sol#8676-8720) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8685-8711)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8714-8720)
safeconsole.log(uint256,bool,uint256,address) (lib/forge-std/src/safeconsole.sol#8720-8750) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8727-8740)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8744-8750)
safeconsole.log(uint256,bool,uint256,bool) (lib/forge-std/src/safeconsole.sol#8750-8780) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8757-8770)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8775-8780)
safeconsole.log(uint256,bool,uint256,uint256) (lib/forge-std/src/safeconsole.sol#8781-8810) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8788-8800)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8803-8810)
safeconsole.log(uint256,bool,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#8810-8854) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8819-8848)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8849-8854)
safeconsole.log(uint256,bool,bytes32,address) (lib/forge-std/src/safeconsole.sol#8854-8901) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8862-8892)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8894-8901)
safeconsole.log(uint256,bool,bytes32,bool) (lib/forge-std/src/safeconsole.sol#8902-8952) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8911-8939)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8944-8951)
safeconsole.log(uint256,bool,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#8952-8995) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8959-8987)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#8989-8995)
safeconsole.log(uint256,bool,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#8996-9051) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9004-9036)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9040-9051)
safeconsole.log(uint256,uint256,address,address) (lib/forge-std/src/safeconsole.sol#9051-9081) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9059-9071)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9073-9080)
safeconsole.log(uint256,uint256,address,bool) (lib/forge-std/src/safeconsole.sol#9082-9109) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9089-9100)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9103-9109)
safeconsole.log(uint256,uint256,address,uint256) (lib/forge-std/src/safeconsole.sol#9109-9136) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9119-9128)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9130-9136)
safeconsole.log(uint256,uint256,address,bytes32) (lib/forge-std/src/safeconsole.sol#9136-9180) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9143-9171)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9173-9180)
safeconsole.log(uint256,uint256,bool,address) (lib/forge-std/src/safeconsole.sol#9180-9210) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9186-9199)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9203-9210)
safeconsole.log(uint256,uint256,bool,bool) (lib/forge-std/src/safeconsole.sol#9211-9233) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9215-9225)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9227-9232)
safeconsole.log(uint256,uint256,bool,uint256) (lib/forge-std/src/safeconsole.sol#9233-9261) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9240-9256)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9259-9261)
safeconsole.log(uint256,uint256,bool,bytes32) (lib/forge-std/src/safeconsole.sol#9261-9307) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9269-9297)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9301-9307)
safeconsole.log(uint256,uint256,uint256,address) (lib/forge-std/src/safeconsole.sol#9307-9331) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9312-9323)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9326-9331)
safeconsole.log(uint256,uint256,uint256,bool) (lib/forge-std/src/safeconsole.sol#9331-9361) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9339-9354)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9357-9361)
safeconsole.log(uint256,uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#9361-9391) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9369-9384)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9387-9391)
safeconsole.log(uint256,uint256,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#9391-9441) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9400-9428)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9432-9440)
safeconsole.log(uint256,uint256,bytes32,address) (lib/forge-std/src/safeconsole.sol#9441-9484) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9450-9472)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9475-9483)
safeconsole.log(uint256,uint256,bytes32,bool) (lib/forge-std/src/safeconsole.sol#9484-9532) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9494-9523)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9525-9532)
safeconsole.log(uint256,uint256,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#9532-9583) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9541-9570)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9573-9583)
safeconsole.log(uint256,uint256,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#9583-9632) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9590-9619)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9622-9632)
safeconsole.log(uint256,bytes32,address,address) (lib/forge-std/src/safeconsole.sol#9633-9680) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9641-9669)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9672-9679)
safeconsole.log(uint256,bytes32,address,bool) (lib/forge-std/src/safeconsole.sol#9680-9727) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9691-9719)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9722-9727)
safeconsole.log(uint256,bytes32,address,uint256) (lib/forge-std/src/safeconsole.sol#9727-9771) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9734-9762)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9766-9771)
safeconsole.log(uint256,bytes32,address,bytes32) (lib/forge-std/src/safeconsole.sol#9771-9819) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9779-9811)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9814-9819)
safeconsole.log(uint256,bytes32,bool,address) (lib/forge-std/src/safeconsole.sol#9819-9863) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9828-9857)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9859-9863)
safeconsole.log(uint256,bytes32,bool,bool) (lib/forge-std/src/safeconsole.sol#9863-9908) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9871-9899)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9903-9908)
safeconsole.log(uint256,bytes32,bool,uint256) (lib/forge-std/src/safeconsole.sol#9908-9954) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9915-9941)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9946-9954)
safeconsole.log(uint256,bytes32,bool,bytes32) (lib/forge-std/src/safeconsole.sol#9954-10003) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9960-9991)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#9993-10003)
safeconsole.log(uint256,bytes32,uint256,address) (lib/forge-std/src/safeconsole.sol#10003-10047) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10008-10036)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10038-10047)
safeconsole.log(uint256,bytes32,uint256,bool) (lib/forge-std/src/safeconsole.sol#10047-10091) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10051-10078)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10081-10091)
safeconsole.log(uint256,bytes32,uint256,uint256) (lib/forge-std/src/safeconsole.sol#10091-10133) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10097-10121)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10124-10133)
safeconsole.log(uint256,bytes32,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#10133-10185) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10144-10169)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10172-10184)
safeconsole.log(uint256,bytes32,bytes32,address) (lib/forge-std/src/safeconsole.sol#10185-10235) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10192-10221)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10224-10234)
safeconsole.log(uint256,bytes32,bytes32,bool) (lib/forge-std/src/safeconsole.sol#10235-10283) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10240-10272)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10276-10282)
safeconsole.log(uint256,bytes32,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#10283-10332) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10291-10321)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10326-10332)
safeconsole.log(uint256,bytes32,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#10333-10387) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10342-10377)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10378-10387)
safeconsole.log(bytes32,address,address,address) (lib/forge-std/src/safeconsole.sol#10387-10431) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10395-10422)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10424-10431)
safeconsole.log(bytes32,address,address,bool) (lib/forge-std/src/safeconsole.sol#10431-10475) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10438-10469)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10469-10475)
safeconsole.log(bytes32,address,address,uint256) (lib/forge-std/src/safeconsole.sol#10475-10521) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10483-10512)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10516-10521)
safeconsole.log(bytes32,address,address,bytes32) (lib/forge-std/src/safeconsole.sol#10521-10573) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10529-10559)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10563-10573)
safeconsole.log(bytes32,address,bool,address) (lib/forge-std/src/safeconsole.sol#10573-10617) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10578-10604)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10607-10616)
safeconsole.log(bytes32,address,bool,bool) (lib/forge-std/src/safeconsole.sol#10617-10658) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10625-10648)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10650-10658)
safeconsole.log(bytes32,address,bool,uint256) (lib/forge-std/src/safeconsole.sol#10658-10702) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10669-10693)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10695-10702)
safeconsole.log(bytes32,address,bool,bytes32) (lib/forge-std/src/safeconsole.sol#10702-10751) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10712-10740)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10743-10751)
safeconsole.log(bytes32,address,uint256,address) (lib/forge-std/src/safeconsole.sol#10751-10795) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10760-10786)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10789-10795)
safeconsole.log(bytes32,address,uint256,bool) (lib/forge-std/src/safeconsole.sol#10795-10838) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10804-10829)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10832-10838)
safeconsole.log(bytes32,address,uint256,uint256) (lib/forge-std/src/safeconsole.sol#10838-10884) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10847-10874)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10876-10884)
safeconsole.log(bytes32,address,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#10884-10933) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10892-10923)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10924-10933)
safeconsole.log(bytes32,address,bytes32,address) (lib/forge-std/src/safeconsole.sol#10933-10983) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10942-10972)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10974-10982)
safeconsole.log(bytes32,address,bytes32,bool) (lib/forge-std/src/safeconsole.sol#10983-11032) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#10993-11022)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11023-11032)
safeconsole.log(bytes32,address,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#11033-11083) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11044-11072)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11074-11083)
safeconsole.log(bytes32,address,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#11083-11141) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11096-11125)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11128-11141)
safeconsole.log(bytes32,bool,address,address) (lib/forge-std/src/safeconsole.sol#11141-11186) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11151-11173)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11176-11186)
safeconsole.log(bytes32,bool,address,bool) (lib/forge-std/src/safeconsole.sol#11186-11227) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11195-11216)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11219-11226)
safeconsole.log(bytes32,bool,address,uint256) (lib/forge-std/src/safeconsole.sol#11227-11270) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11238-11260)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11263-11270)
safeconsole.log(bytes32,bool,address,bytes32) (lib/forge-std/src/safeconsole.sol#11270-11320) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11283-11309)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11311-11320)
safeconsole.log(bytes32,bool,bool,address) (lib/forge-std/src/safeconsole.sol#11320-11364) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11329-11355)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11358-11364)
safeconsole.log(bytes32,bool,bool,bool) (lib/forge-std/src/safeconsole.sol#11364-11409) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11373-11401)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11403-11409)
safeconsole.log(bytes32,bool,bool,uint256) (lib/forge-std/src/safeconsole.sol#11409-11455) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11416-11446)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11450-11455)
safeconsole.log(bytes32,bool,bool,bytes32) (lib/forge-std/src/safeconsole.sol#11455-11506) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11463-11492)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11494-11506)
safeconsole.log(bytes32,bool,uint256,address) (lib/forge-std/src/safeconsole.sol#11507-11550) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11512-11537)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11541-11550)
safeconsole.log(bytes32,bool,uint256,bool) (lib/forge-std/src/safeconsole.sol#11551-11593) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11556-11580)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11583-11593)
safeconsole.log(bytes32,bool,uint256,uint256) (lib/forge-std/src/safeconsole.sol#11593-11636) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11600-11624)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11627-11636)
safeconsole.log(bytes32,bool,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#11636-11686) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11647-11672)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11675-11685)
safeconsole.log(bytes32,bool,bytes32,address) (lib/forge-std/src/safeconsole.sol#11686-11738) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11697-11722)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11725-11738)
safeconsole.log(bytes32,bool,bytes32,bool) (lib/forge-std/src/safeconsole.sol#11738-11787) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11744-11775)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11777-11787)
safeconsole.log(bytes32,bool,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#11787-11835) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11793-11825)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11829-11835)
safeconsole.log(bytes32,bool,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#11836-11890) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11845-11880)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11883-11890)
safeconsole.log(bytes32,uint256,address,address) (lib/forge-std/src/safeconsole.sol#11890-11934) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11898-11928)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11929-11934)
safeconsole.log(bytes32,uint256,address,bool) (lib/forge-std/src/safeconsole.sol#11934-11977) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11942-11972)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11974-11977)
safeconsole.log(bytes32,uint256,address,uint256) (lib/forge-std/src/safeconsole.sol#11977-12023) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#11986-12017)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12019-12023)
safeconsole.log(bytes32,uint256,address,bytes32) (lib/forge-std/src/safeconsole.sol#12023-12074) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12032-12064)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12068-12074)
safeconsole.log(bytes32,uint256,bool,address) (lib/forge-std/src/safeconsole.sol#12074-12121) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12081-12107)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12111-12121)
safeconsole.log(bytes32,uint256,bool,bool) (lib/forge-std/src/safeconsole.sol#12121-12163) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12127-12151)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12154-12163)
safeconsole.log(bytes32,uint256,bool,uint256) (lib/forge-std/src/safeconsole.sol#12163-12205) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12174-12195)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12198-12205)
safeconsole.log(bytes32,uint256,bool,bytes32) (lib/forge-std/src/safeconsole.sol#12206-12256) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12217-12245)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12247-12255)
safeconsole.log(bytes32,uint256,uint256,address) (lib/forge-std/src/safeconsole.sol#12257-12299) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12265-12290)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12293-12299)
safeconsole.log(bytes32,uint256,uint256,bool) (lib/forge-std/src/safeconsole.sol#12299-12343) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12308-12334)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12337-12343)
safeconsole.log(bytes32,uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#12343-12388) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12352-12378)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12380-12388)
safeconsole.log(bytes32,uint256,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#12388-12437) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12397-12426)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12429-12437)
safeconsole.log(bytes32,uint256,bytes32,address) (lib/forge-std/src/safeconsole.sol#12437-12487) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12447-12476)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12479-12487)
safeconsole.log(bytes32,uint256,bytes32,bool) (lib/forge-std/src/safeconsole.sol#12487-12537) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12497-12526)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12529-12537)
safeconsole.log(bytes32,uint256,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#12538-12587) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12547-12575)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12578-12587)
safeconsole.log(bytes32,uint256,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#12587-12644) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12601-12630)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12633-12644)
safeconsole.log(bytes32,bytes32,address,address) (lib/forge-std/src/safeconsole.sol#12645-12696) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12657-12682)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12685-12696)
safeconsole.log(bytes32,bytes32,address,bool) (lib/forge-std/src/safeconsole.sol#12696-12747) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12705-12732)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12736-12747)
safeconsole.log(bytes32,bytes32,address,uint256) (lib/forge-std/src/safeconsole.sol#12747-12797) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12753-12783)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12786-12797)
safeconsole.log(bytes32,bytes32,address,bytes32) (lib/forge-std/src/safeconsole.sol#12797-12851) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12804-12838)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12843-12851)
safeconsole.log(bytes32,bytes32,bool,address) (lib/forge-std/src/safeconsole.sol#12851-12902) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12860-12891)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12895-12901)
safeconsole.log(bytes32,bytes32,bool,bool) (lib/forge-std/src/safeconsole.sol#12902-12953) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12910-12940)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12944-12953)
safeconsole.log(bytes32,bytes32,bool,uint256) (lib/forge-std/src/safeconsole.sol#12953-13005) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12960-12991)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#12993-13005)
safeconsole.log(bytes32,bytes32,bool,bytes32) (lib/forge-std/src/safeconsole.sol#13005-13062) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13012-13044)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13048-13062)
safeconsole.log(bytes32,bytes32,uint256,address) (lib/forge-std/src/safeconsole.sol#13062-13112) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13067-13096)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13102-13112)
safeconsole.log(bytes32,bytes32,uint256,bool) (lib/forge-std/src/safeconsole.sol#13112-13162) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13118-13147)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13150-13162)
safeconsole.log(bytes32,bytes32,uint256,uint256) (lib/forge-std/src/safeconsole.sol#13162-13211) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13169-13197)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13200-13211)
safeconsole.log(bytes32,bytes32,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#13212-13268) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13222-13252)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13255-13267)
safeconsole.log(bytes32,bytes32,bytes32,address) (lib/forge-std/src/safeconsole.sol#13268-13327) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13279-13309)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13312-13327)
safeconsole.log(bytes32,bytes32,bytes32,bool) (lib/forge-std/src/safeconsole.sol#13327-13383) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13334-13368)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13370-13383)
safeconsole.log(bytes32,bytes32,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#13383-13438) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13391-13425)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13429-13438)
safeconsole.log(bytes32,bytes32,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#13439-13500) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13450-13488)
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13492-13500)
safeconsole.log.asm_0.writeString() (lib/forge-std/src/safeconsole.sol#13450-13460) uses assembly
        - INLINE ASM (lib/forge-std/src/safeconsole.sol#13450-13460)
ERC721Utils.checkOnERC721Received(address,address,address,uint256,bytes) (lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol#23-46) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol#42-44)
Panic.panic(uint256) (lib/openzeppelin-contracts/contracts/utils/Panic.sol#49-53) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Panic.sol#50-53)
Strings.toString(uint256) (lib/openzeppelin-contracts/contracts/utils/Strings.sol#43-59) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Strings.sol#48-51)
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Strings.sol#53-56)
Strings.toChecksumHexString(address) (lib/openzeppelin-contracts/contracts/utils/Strings.sol#108-124) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Strings.sol#112-115)
Strings.escapeJSON(string) (lib/openzeppelin-contracts/contracts/utils/Strings.sol#440-462) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Strings.sol#459-461)
Strings._unsafeReadBytesOffset(bytes,uint256) (lib/openzeppelin-contracts/contracts/utils/Strings.sol#470-481) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Strings.sol#479-481)
Math.add512(uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#23-28) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#25-28)
Math.mul512(uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#35-44) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#40-44)
Math.tryMul(uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#71-81) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#73-78)
Math.tryDiv(uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#87-93) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#89-93)
Math.tryMod(uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#100-106) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#102-106)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199-269) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#222-229)
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#236-244)
Math.tryModExp(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#404-423) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#405-422)
Math.tryModExp(bytes,bytes,bytes) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#436-462) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#447-462)
Math.log2(uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#592-640) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#638-640)
SafeCast.toUint(bool) (lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol#1120-1124) uses assembly
        - INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol#1122-1123)
FractionalizedNFT.rageQuit() (src/FractionalizedNFT.sol#230-263) uses assembly
        - INLINE ASM (src/FractionalizedNFT.sol#248-249)
Governance.vote(uint256) (src/Governance.sol#50-65) uses assembly
        - INLINE ASM (src/Governance.sol#64-65)
Governance.uselessYul() (src/Governance.sol#109-115) uses assembly
        - INLINE ASM (src/Governance.sol#111-115)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
StdCheatsSafe.assumeNotBlacklisted(address,address) (lib/forge-std/src/StdCheats.sol#200-224) compares to a boolean constant:
        -vm.assume(! success || abi.decode(returnData,(bool)) == false) (lib/forge-std/src/StdCheats.sol#217-220)
StdCheatsSafe.assumeNotBlacklisted(address,address) (lib/forge-std/src/StdCheats.sol#200-224) compares to a boolean constant:
        -vm.assume(! success || abi.decode(returnData,(bool)) == false) (lib/forge-std/src/StdCheats.sol#222-224)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
4 different versions of Solidity are used:
        - Version constraint >=0.6.2<0.9.0 is used by:
                ->=0.6.2<0.9.0 (lib/forge-std/src/Base.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/Script.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/StdChains.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/StdCheats.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/StdConstants.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/StdMath.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/StdStorage.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/StdUtils.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/Vm.sol#3-4)
                ->=0.6.2<0.9.0 (lib/forge-std/src/interfaces/IMulticall3.sol#1-2)
                ->=0.6.2<0.9.0 (lib/forge-std/src/safeconsole.sol#1-2)
        - Version constraint >=0.6.0<0.9.0 is used by:
                ->=0.6.0<0.9.0 (lib/forge-std/src/StdJson.sol#1-2)
        - Version constraint >=0.4.22<0.9.0 is used by:
                ->=0.4.22<0.9.0 (lib/forge-std/src/StdStyle.sol#1-2)
                ->=0.4.22<0.9.0 (lib/forge-std/src/console.sol#1-2)
                ->=0.4.22<0.9.0 (lib/forge-std/src/console2.sol#1-2)
        - Version constraint ^0.8.20 is used by:
                -^0.8.20 (lib/openzeppelin-contracts/contracts/access/Ownable.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol#2-3)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Context.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Panic.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Strings.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#2-4)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol#3-5)
                -^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol#2-4)
                -^0.8.20 (src/Deploy.s.sol#1-2)
                -^0.8.20 (src/FractionalizedNFT.sol#1-2)
                -^0.8.20 (src/Governance.sol#1-2)
                -^0.8.20 (src/GovernanceDAO.sol#1-2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Version constraint >=0.6.2<0.9.0 is too complex.
It is used by:
        - >=0.6.2<0.9.0 (lib/forge-std/src/Base.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/Script.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/StdChains.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/StdCheats.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/StdConstants.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/StdMath.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/StdStorage.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/StdUtils.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/Vm.sol#3-4)
        - >=0.6.2<0.9.0 (lib/forge-std/src/interfaces/IMulticall3.sol#1-2)
        - >=0.6.2<0.9.0 (lib/forge-std/src/safeconsole.sol#1-2)
Version constraint >=0.6.0<0.9.0 is too complex.
It is used by:
        - >=0.6.0<0.9.0 (lib/forge-std/src/StdJson.sol#1-2)
Version constraint >=0.4.22<0.9.0 is too complex.
It is used by:
        - >=0.4.22<0.9.0 (lib/forge-std/src/StdStyle.sol#1-2)
        - >=0.4.22<0.9.0 (lib/forge-std/src/console.sol#1-2)
        - >=0.4.22<0.9.0 (lib/forge-std/src/console2.sol#1-2)
Version constraint ^0.8.20 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
        - VerbatimInvalidDeduplication
        - FullInlinerNonExpressionSplitArgumentEvaluationOrder
        - MissingSideEffectsOnSelectorAccess.
It is used by:
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/access/Ownable.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol#2-3)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Context.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Panic.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Strings.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#2-4)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol#3-5)
        - ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol#2-4)
        - ^0.8.20 (src/Deploy.s.sol#1-2)
        - ^0.8.20 (src/FractionalizedNFT.sol#1-2)
        - ^0.8.20 (src/Governance.sol#1-2)
        - ^0.8.20 (src/GovernanceDAO.sol#1-2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in StdCheatsSafe.assumeNotBlacklisted(address,address) (lib/forge-std/src/StdCheats.sol#200-224):
        - (success,returnData) = token.staticcall(abi.encodeWithSelector(0xfe575a87,addr)) (lib/forge-std/src/StdCheats.sol#215-217)
        - (success,returnData) = token.staticcall(abi.encodeWithSelector(0xe47d6060,addr)) (lib/forge-std/src/StdCheats.sol#221-222)
Low level call in StdCheatsSafe._isPayable(address) (lib/forge-std/src/StdCheats.sol#280-290):
        - (success,None) = address(addr).call{value: 1}() (lib/forge-std/src/StdCheats.sol#286-287)
Low level call in StdCheats.deal(address,address,uint256,bool) (lib/forge-std/src/StdCheats.sol#719-741):
        - (None,balData) = token.staticcall(abi.encodeWithSelector(0x70a08231,to)) (lib/forge-std/src/StdCheats.sol#724-728)
        - (None,totSupData) = token.staticcall(abi.encodeWithSelector(0x18160ddd)) (lib/forge-std/src/StdCheats.sol#731-735)
Low level call in StdCheats.dealERC1155(address,address,uint256,uint256,bool) (lib/forge-std/src/StdCheats.sol#741-766):
        - (None,balData) = token.staticcall(abi.encodeWithSelector(0x00fdd58e,to,id)) (lib/forge-std/src/StdCheats.sol#743-746)
        - (None,totSupData) = token.staticcall(abi.encodeWithSelector(0xbd85b039,id)) (lib/forge-std/src/StdCheats.sol#751-753)
Low level call in StdCheats.dealERC721(address,address,uint256) (lib/forge-std/src/StdCheats.sol#766-789):
        - (successMinted,ownerData) = token.staticcall(abi.encodeWithSelector(0x6352211e,id)) (lib/forge-std/src/StdCheats.sol#770-771)
        - (None,fromBalData) = token.staticcall(abi.encodeWithSelector(0x70a08231,abi.decode(ownerData,(address)))) (lib/forge-std/src/StdCheats.sol#774-777)
        - (None,toBalData) = token.staticcall(abi.encodeWithSelector(0x70a08231,to)) (lib/forge-std/src/StdCheats.sol#780-782)
Low level call in StdCheats.deployCodeTo(string,bytes,uint256,address) (lib/forge-std/src/StdCheats.sol#796-805):
        - (success,runtimeBytecode) = where.call{value: value}() (lib/forge-std/src/StdCheats.sol#801)
Low level call in StdCheats.console2_log_StdCheats(string) (lib/forge-std/src/StdCheats.sol#808-813):
        - (status,None) = address(CONSOLE2_ADDRESS).staticcall(abi.encodeWithSignature(log(string),p0)) (lib/forge-std/src/StdCheats.sol#812-813)
Low level call in stdStorageSafe.callTarget(StdStorage) (lib/forge-std/src/StdStorage.sol#43-47):
        - (success,rdat) = self._target.staticcall(cald) (lib/forge-std/src/StdStorage.sol#45-46)
Low level call in Governance.executeProposal(uint256) (src/Governance.sol#93-103):
        - (success,None) = address(this).call(p.callData) (src/Governance.sol#100-101)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Constant CommonBase.vm (lib/forge-std/src/Base.sol#32-34) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ScriptBase.vmSafe (lib/forge-std/src/Base.sol#40-41) is not in UPPER_CASE_WITH_UNDERSCORES
Variable Script.IS_SCRIPT (lib/forge-std/src/Script.sol#26-27) is not in mixedCase
Constant StdChains.vm (lib/forge-std/src/StdChains.sol#34-35) is not in UPPER_CASE_WITH_UNDERSCORES
Constant StdCheatsSafe.vm (lib/forge-std/src/StdCheats.sol#10-11) is not in UPPER_CASE_WITH_UNDERSCORES
Function StdCheats.console2_log_StdCheats(string) (lib/forge-std/src/StdCheats.sol#808-813) is not in mixedCase
Constant StdCheats.vm (lib/forge-std/src/StdCheats.sol#632-637) is not in UPPER_CASE_WITH_UNDERSCORES
Contract stdJson (lib/forge-std/src/StdJson.sol#22-274) is not in CapWords
Constant stdJson.vm (lib/forge-std/src/StdJson.sol#24-26) is not in UPPER_CASE_WITH_UNDERSCORES
Contract stdMath (lib/forge-std/src/StdMath.sol#2-41) is not in CapWords
Contract stdStorageSafe (lib/forge-std/src/StdStorage.sol#21-324) is not in CapWords
Event stdStorageSafe.WARNING_UninitedSlot(address,uint256) (lib/forge-std/src/StdStorage.sol#25-26) is not in CapWords
Parameter stdStorageSafe.find(StdStorage,bool)._clear (lib/forge-std/src/StdStorage.sol#105) is not in mixedCase
Parameter stdStorageSafe.target(StdStorage,address)._target (lib/forge-std/src/StdStorage.sol#166) is not in mixedCase
Parameter stdStorageSafe.sig(StdStorage,bytes4)._sig (lib/forge-std/src/StdStorage.sol#171) is not in mixedCase
Parameter stdStorageSafe.sig(StdStorage,string)._sig (lib/forge-std/src/StdStorage.sol#176) is not in mixedCase
Function stdStorageSafe.with_calldata(StdStorage,bytes) (lib/forge-std/src/StdStorage.sol#178-184) is not in mixedCase
Parameter stdStorageSafe.with_calldata(StdStorage,bytes)._calldata (lib/forge-std/src/StdStorage.sol#181) is not in mixedCase
Function stdStorageSafe.with_key(StdStorage,address) (lib/forge-std/src/StdStorage.sol#185-189) is not in mixedCase
Function stdStorageSafe.with_key(StdStorage,uint256) (lib/forge-std/src/StdStorage.sol#190-193) is not in mixedCase
Function stdStorageSafe.with_key(StdStorage,bytes32) (lib/forge-std/src/StdStorage.sol#193-197) is not in mixedCase
Function stdStorageSafe.enable_packed_slots(StdStorage) (lib/forge-std/src/StdStorage.sol#197-202) is not in mixedCase
Parameter stdStorageSafe.depth(StdStorage,uint256)._depth (lib/forge-std/src/StdStorage.sol#206) is not in mixedCase
Function stdStorageSafe.read_bytes32(StdStorage) (lib/forge-std/src/StdStorage.sol#218-219) is not in mixedCase
Function stdStorageSafe.read_bool(StdStorage) (lib/forge-std/src/StdStorage.sol#219-228) is not in mixedCase
Function stdStorageSafe.read_address(StdStorage) (lib/forge-std/src/StdStorage.sol#228-232) is not in mixedCase
Function stdStorageSafe.read_uint(StdStorage) (lib/forge-std/src/StdStorage.sol#232-235) is not in mixedCase
Function stdStorageSafe.read_int(StdStorage) (lib/forge-std/src/StdStorage.sol#235-239) is not in mixedCase
Constant stdStorageSafe.vm (lib/forge-std/src/StdStorage.sol#26-28) is not in UPPER_CASE_WITH_UNDERSCORES
Contract stdStorage (lib/forge-std/src/StdStorage.sol#324-458) is not in CapWords
Parameter stdStorage.find(StdStorage,bool)._clear (lib/forge-std/src/StdStorage.sol#335) is not in mixedCase
Parameter stdStorage.target(StdStorage,address)._target (lib/forge-std/src/StdStorage.sol#338) is not in mixedCase
Parameter stdStorage.sig(StdStorage,bytes4)._sig (lib/forge-std/src/StdStorage.sol#345) is not in mixedCase
Parameter stdStorage.sig(StdStorage,string)._sig (lib/forge-std/src/StdStorage.sol#349) is not in mixedCase
Function stdStorage.with_key(StdStorage,address) (lib/forge-std/src/StdStorage.sol#350-354) is not in mixedCase
Function stdStorage.with_key(StdStorage,uint256) (lib/forge-std/src/StdStorage.sol#354-358) is not in mixedCase
Function stdStorage.with_key(StdStorage,bytes32) (lib/forge-std/src/StdStorage.sol#358-362) is not in mixedCase
Function stdStorage.with_calldata(StdStorage,bytes) (lib/forge-std/src/StdStorage.sol#362-366) is not in mixedCase
Parameter stdStorage.with_calldata(StdStorage,bytes)._calldata (lib/forge-std/src/StdStorage.sol#365) is not in mixedCase
Function stdStorage.enable_packed_slots(StdStorage) (lib/forge-std/src/StdStorage.sol#366-370) is not in mixedCase
Parameter stdStorage.depth(StdStorage,uint256)._depth (lib/forge-std/src/StdStorage.sol#373) is not in mixedCase
Function stdStorage.checked_write(StdStorage,address) (lib/forge-std/src/StdStorage.sol#377-381) is not in mixedCase
Function stdStorage.checked_write(StdStorage,uint256) (lib/forge-std/src/StdStorage.sol#381-382) is not in mixedCase
Function stdStorage.checked_write_int(StdStorage,int256) (lib/forge-std/src/StdStorage.sol#382-389) is not in mixedCase
Function stdStorage.checked_write(StdStorage,bool) (lib/forge-std/src/StdStorage.sol#389-394) is not in mixedCase
Function stdStorage.checked_write(StdStorage,bytes32) (lib/forge-std/src/StdStorage.sol#394-433) is not in mixedCase
Function stdStorage.read_bytes32(StdStorage) (lib/forge-std/src/StdStorage.sol#433-435) is not in mixedCase
Function stdStorage.read_bool(StdStorage) (lib/forge-std/src/StdStorage.sol#435-439) is not in mixedCase
Function stdStorage.read_address(StdStorage) (lib/forge-std/src/StdStorage.sol#439-441) is not in mixedCase
Function stdStorage.read_uint(StdStorage) (lib/forge-std/src/StdStorage.sol#442-447) is not in mixedCase
Function stdStorage.read_int(StdStorage) (lib/forge-std/src/StdStorage.sol#447-450) is not in mixedCase
Constant stdStorage.vm (lib/forge-std/src/StdStorage.sol#325) is not in UPPER_CASE_WITH_UNDERSCORES
Constant StdStyle.vm (lib/forge-std/src/StdStyle.sol#6-7) is not in UPPER_CASE_WITH_UNDERSCORES
Function StdUtils.console2_log_StdUtils(string) (lib/forge-std/src/StdUtils.sol#191-194) is not in mixedCase
Function StdUtils.console2_log_StdUtils(string,uint256) (lib/forge-std/src/StdUtils.sol#194-199) is not in mixedCase
Function StdUtils.console2_log_StdUtils(string,string) (lib/forge-std/src/StdUtils.sol#199-203) is not in mixedCase
Constant StdUtils.multicall (lib/forge-std/src/StdUtils.sol#12-14) is not in UPPER_CASE_WITH_UNDERSCORES
Constant StdUtils.vm (lib/forge-std/src/StdUtils.sol#14-15) is not in UPPER_CASE_WITH_UNDERSCORES
Function VmSafe.eth_getLogs(uint256,uint256,address,bytes32[]) (lib/forge-std/src/Vm.sol#599-602) is not in mixedCase
Contract console (lib/forge-std/src/console.sol#2-1528) is not in CapWords
Contract safeconsole (lib/forge-std/src/safeconsole.sol#5-13500) is not in CapWords
Parameter safeconsole.log.asm_0.writeString().pos_log_asm_0_writeString (lib/forge-std/src/safeconsole.sol#13451) is not in mixedCase
Parameter safeconsole.log.asm_0.writeString().w_log_asm_0_writeString (lib/forge-std/src/safeconsole.sol#13451) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "status (lib/forge-std/src/StdCheats.sol#813)" inStdCheats (lib/forge-std/src/StdCheats.sol#631-813)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
safeconsole.slitherConstructorConstantVariables() (lib/forge-std/src/safeconsole.sol#5-13500) uses literals with too many digits:
        - CONSOLE_ADDR = 0x000000000000000000000000000000000000000000636F6e736F6c652e6c6f67 (lib/forge-std/src/safeconsole.sol#6-7)
Math.log2(uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#592-640) uses literals with too many digits:
        - r = r | byte(uint256,uint256)(x >> r,0x0000010102020202030303030303030300000000000000000000000000000000) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#638-640)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
CommonBase.CONSOLE (lib/forge-std/src/Base.sol#12-13) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
CommonBase.CREATE2_FACTORY (lib/forge-std/src/Base.sol#15-16) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
CommonBase.DEFAULT_SENDER (lib/forge-std/src/Base.sol#18-19) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
CommonBase.DEFAULT_TEST_CONTRACT (lib/forge-std/src/Base.sol#22-23) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
CommonBase.MULTICALL3_ADDRESS (lib/forge-std/src/Base.sol#25-26) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
CommonBase.SECP256K1_ORDER (lib/forge-std/src/Base.sol#27-29) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
CommonBase.UINT256_MAX (lib/forge-std/src/Base.sol#29-32) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
CommonBase.stdstore (lib/forge-std/src/Base.sol#34) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
ScriptBase.vmSafe (lib/forge-std/src/Base.sol#40-41) is never used in DeployGovernance (src/Deploy.s.sol#5-17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
Loop condition i < multiSigApprovers.length (src/Governance.sol#105-108) should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length
INFO:Detectors:
Governance.requiredApprovals (src/Governance.sol#11-12) should be constant
Script.IS_SCRIPT (lib/forge-std/src/Script.sol#26-27) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
Governance.token (src/Governance.sol#9-10) should be immutable
GovernanceDAO.governanceToken (src/GovernanceDAO.sol#14-15) should be immutable
GovernanceDAO.quorumVotes (src/GovernanceDAO.sol#22-23) should be immutable
GovernanceDAO.votingDelay (src/GovernanceDAO.sol#20-21) should be immutable
GovernanceDAO.votingPeriod (src/GovernanceDAO.sol#21-22) should be immutable
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:. analyzed (43 contracts with 100 detectors), 531 result(s) found
